
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package Analizadores;

import Objetos.AgregarComponente;
import Objetos.ModificarComponente;
import Objetos.BorrarComponente;
import Objetos.ComponenteImagen;
import Objetos.ComponenteMenu;
import Objetos.ComponenteParrafo;
import Objetos.ComponenteTitulo;
import Objetos.ComponenteVideo;
import Objetos.ModificarPagina;
import Objetos.BorrarPagina;
import Apoyo.Parametro;
import Logica.Acciones;
import Objetos.NuevaPagina;
import Objetos.NuevoSitioWeb;
import Objetos.BorrarSitioWeb;
import java.text.SimpleDateFormat;
import java_cup.runtime.*;
import java_cup.runtime.XMLElement;
import java.util.ArrayList;
import java.util.Date;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\327\000\002\002\004\000\002\002\003\000\002\002" +
    "\003\000\002\003\005\000\002\004\004\000\002\004\004" +
    "\000\002\004\004\000\002\004\004\000\002\004\004\000" +
    "\002\004\004\000\002\004\004\000\002\004\004\000\002" +
    "\004\003\000\002\004\003\000\002\004\003\000\002\004" +
    "\003\000\002\004\003\000\002\004\003\000\002\004\003" +
    "\000\002\004\003\000\002\005\003\000\002\005\003\000" +
    "\002\005\003\000\002\005\003\000\002\005\003\000\002" +
    "\005\003\000\002\005\003\000\002\005\003\000\002\006" +
    "\005\000\002\007\005\000\002\010\006\000\002\010\006" +
    "\000\002\010\006\000\002\010\006\000\002\010\006\000" +
    "\002\010\005\000\002\010\005\000\002\010\005\000\002" +
    "\010\005\000\002\010\005\000\002\011\003\000\002\011" +
    "\003\000\002\011\003\000\002\011\003\000\002\011\003" +
    "\000\002\011\003\000\002\011\003\000\002\011\003\000" +
    "\002\011\003\000\002\011\003\000\002\011\003\000\002" +
    "\106\003\000\002\147\003\000\002\147\005\000\002\150" +
    "\004\000\002\150\004\000\002\151\003\000\002\151\003" +
    "\000\002\151\003\000\002\151\003\000\002\151\003\000" +
    "\002\151\003\000\002\151\003\000\002\151\003\000\002" +
    "\151\003\000\002\151\003\000\002\012\005\000\002\013" +
    "\005\000\002\014\004\000\002\015\006\000\002\015\006" +
    "\000\002\016\006\000\002\016\006\000\002\016\006\000" +
    "\002\016\006\000\002\016\006\000\002\016\006\000\002" +
    "\016\006\000\002\016\006\000\002\016\005\000\002\016" +
    "\005\000\002\016\005\000\002\016\005\000\002\016\005" +
    "\000\002\016\005\000\002\016\005\000\002\016\005\000" +
    "\002\017\006\000\002\020\004\000\002\020\003\000\002" +
    "\021\005\000\002\022\005\000\002\023\004\000\002\025" +
    "\006\000\002\025\006\000\002\026\006\000\002\026\006" +
    "\000\002\026\005\000\002\026\005\000\002\027\005\000" +
    "\002\030\004\000\002\031\006\000\002\032\006\000\002" +
    "\033\004\000\002\033\004\000\002\033\004\000\002\033" +
    "\004\000\002\033\004\000\002\034\006\000\002\035\005" +
    "\000\002\036\006\000\002\036\006\000\002\036\005\000" +
    "\002\036\005\000\002\037\003\000\002\037\003\000\002" +
    "\037\003\000\002\037\003\000\002\040\006\000\002\041" +
    "\005\000\002\042\006\000\002\042\006\000\002\042\006" +
    "\000\002\042\005\000\002\042\005\000\002\042\005\000" +
    "\002\043\006\000\002\044\005\000\002\045\006\000\002" +
    "\045\006\000\002\045\006\000\002\045\006\000\002\045" +
    "\005\000\002\045\005\000\002\045\005\000\002\045\005" +
    "\000\002\046\006\000\002\047\005\000\002\050\006\000" +
    "\002\050\006\000\002\050\006\000\002\050\005\000\002" +
    "\050\005\000\002\050\005\000\002\051\006\000\002\052" +
    "\005\000\002\053\006\000\002\053\006\000\002\053\005" +
    "\000\002\053\005\000\002\054\003\000\002\054\003\000" +
    "\002\055\005\000\002\056\005\000\002\057\006\000\002" +
    "\057\006\000\002\057\005\000\002\057\005\000\002\060" +
    "\005\000\002\061\012\000\002\062\012\000\002\063\012" +
    "\000\002\064\012\000\002\065\012\000\002\066\012\000" +
    "\002\067\012\000\002\070\012\000\002\071\012\000\002" +
    "\072\012\000\002\073\005\000\002\074\006\000\002\075" +
    "\006\000\002\076\005\000\002\077\005\000\002\100\005" +
    "\000\002\102\005\000\002\103\005\000\002\104\005\000" +
    "\002\105\005\000\002\107\005\000\002\110\005\000\002" +
    "\111\005\000\002\112\005\000\002\113\005\000\002\101" +
    "\005\000\002\146\005\000\002\146\003\000\002\146\005" +
    "\000\002\152\005\000\002\153\005\000\002\114\013\000" +
    "\002\115\005\000\002\116\006\000\002\117\012\000\002" +
    "\120\012\000\002\121\012\000\002\122\012\000\002\123" +
    "\012\000\002\124\012\000\002\125\012\000\002\126\012" +
    "\000\002\127\006\000\002\130\005\000\002\131\006\000" +
    "\002\132\012\000\002\133\012\000\002\134\012\000\002" +
    "\135\012\000\002\136\012\000\002\137\012\000\002\140" +
    "\012\000\002\141\012\000\002\142\006\000\002\143\005" +
    "\000\002\144\006" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0261\000\004\004\026\001\002\000\004\004\031\001" +
    "\002\000\004\002\uffff\001\002\000\004\002\uffe8\001\002" +
    "\000\004\002\000\001\002\000\004\004\107\001\002\000" +
    "\004\002\uffec\001\002\000\004\002\u025c\001\002\000\004" +
    "\002\uffe7\001\002\000\004\004\031\001\002\000\004\002" +
    "\uffed\001\002\000\004\004\u0225\001\002\000\004\004\031" +
    "\001\002\000\004\002\uffeb\001\002\000\004\002\uffe6\001" +
    "\002\000\004\004\031\001\002\000\004\002\uffe9\001\002" +
    "\000\004\002\uffea\001\002\000\004\004\031\001\002\000" +
    "\006\006\162\007\161\001\002\000\004\004\107\001\002" +
    "\000\004\004\031\001\002\000\004\010\105\001\002\000" +
    "\004\004\100\001\002\000\004\004\034\001\002\000\004" +
    "\011\064\001\002\000\004\004\053\001\002\000\004\053" +
    "\040\001\002\000\004\053\040\001\002\000\004\054\047" +
    "\001\002\000\004\004\042\001\002\000\004\022\044\001" +
    "\002\000\004\004\uff64\001\002\000\004\011\045\001\002" +
    "\000\004\005\046\001\002\000\004\004\uff56\001\002\000" +
    "\004\071\050\001\002\000\010\004\uff55\057\uff55\071\uff55" +
    "\001\002\000\004\004\042\001\002\000\004\004\uff65\001" +
    "\002\000\006\011\064\022\063\001\002\000\004\053\040" +
    "\001\002\000\004\053\040\001\002\000\004\004\uff68\001" +
    "\002\000\004\004\042\001\002\000\004\004\uff66\001\002" +
    "\000\004\004\042\001\002\000\004\004\uff67\001\002\000" +
    "\004\010\076\001\002\000\004\012\065\001\002\000\004" +
    "\020\066\001\002\000\004\021\067\001\002\000\006\033" +
    "\070\042\071\001\002\000\004\021\074\001\002\000\004" +
    "\021\072\001\002\000\004\005\073\001\002\000\004\053" +
    "\uff5a\001\002\000\004\005\075\001\002\000\004\053\uff5e" +
    "\001\002\000\004\005\077\001\002\000\004\004\uff57\001" +
    "\002\000\004\022\102\001\002\000\006\002\uff69\004\uff69" +
    "\001\002\000\004\007\103\001\002\000\004\005\104\001" +
    "\002\000\006\002\uff2d\004\uff2d\001\002\000\004\005\106" +
    "\001\002\000\004\004\uff58\001\002\000\004\011\155\001" +
    "\002\000\004\004\100\001\002\000\004\053\123\001\002" +
    "\000\004\004\uffd5\001\002\000\004\004\uffd6\001\002\000" +
    "\004\004\uffd1\001\002\000\004\004\uffd3\001\002\000\004" +
    "\004\uffcf\001\002\000\004\004\uffd8\001\002\000\004\004" +
    "\uffd2\001\002\000\004\004\uffd4\001\002\000\004\004\uffd0" +
    "\001\002\000\030\040\131\054\047\056\134\060\136\061" +
    "\135\062\133\063\132\064\141\065\140\066\137\067\130" +
    "\001\002\000\004\004\042\001\002\000\004\004\uffd7\001" +
    "\002\000\004\004\uffd9\001\002\000\004\004\uffa6\001\002" +
    "\000\004\071\153\001\002\000\004\071\152\001\002\000" +
    "\004\071\151\001\002\000\004\071\150\001\002\000\004" +
    "\071\147\001\002\000\004\071\146\001\002\000\004\071" +
    "\145\001\002\000\004\071\144\001\002\000\004\071\143" +
    "\001\002\000\004\071\142\001\002\000\004\004\uff53\001" +
    "\002\000\004\004\uff52\001\002\000\004\004\uff51\001\002" +
    "\000\004\004\uff4f\001\002\000\004\004\uff4e\001\002\000" +
    "\004\004\uff4a\001\002\000\004\004\uff4d\001\002\000\004" +
    "\004\uff4c\001\002\000\004\004\uff54\001\002\000\004\004" +
    "\uff50\001\002\000\006\002\uffa7\004\uffa7\001\002\000\004" +
    "\012\156\001\002\000\004\020\157\001\002\000\004\021" +
    "\160\001\002\000\004\033\070\001\002\000\004\012\164" +
    "\001\002\000\004\005\163\001\002\000\004\004\uff2c\001" +
    "\002\000\004\020\165\001\002\000\004\021\166\001\002" +
    "\000\022\023\174\024\173\025\172\026\176\027\167\030" +
    "\175\031\170\032\171\001\002\000\004\021\215\001\002" +
    "\000\004\021\213\001\002\000\004\021\211\001\002\000" +
    "\004\021\207\001\002\000\004\021\205\001\002\000\004" +
    "\021\203\001\002\000\004\021\201\001\002\000\004\021" +
    "\177\001\002\000\004\005\200\001\002\000\004\004\uff32" +
    "\001\002\000\004\005\202\001\002\000\004\004\uff30\001" +
    "\002\000\004\005\204\001\002\000\004\004\uff35\001\002" +
    "\000\004\005\206\001\002\000\004\004\uff34\001\002\000" +
    "\004\005\210\001\002\000\004\004\uff33\001\002\000\004" +
    "\005\212\001\002\000\004\004\uff2e\001\002\000\004\005" +
    "\214\001\002\000\004\004\uff2f\001\002\000\004\005\216" +
    "\001\002\000\004\004\uff31\001\002\000\004\004\100\001" +
    "\002\000\004\004\107\001\002\000\004\004\uff9d\001\002" +
    "\000\004\053\040\001\002\000\004\004\042\001\002\000" +
    "\004\004\225\001\002\000\004\011\u0194\001\002\000\004" +
    "\004\uff9c\001\002\000\004\053\040\001\002\000\004\004" +
    "\042\001\002\000\004\004\232\001\002\000\004\011\u018d" +
    "\001\002\000\004\053\245\001\002\000\004\004\uff9b\001" +
    "\002\000\004\004\042\001\002\000\004\004\042\001\002" +
    "\000\004\004\uff99\001\002\000\004\004\uff97\001\002\000" +
    "\004\004\uff96\001\002\000\004\004\uff98\001\002\000\004" +
    "\004\042\001\002\000\004\004\042\001\002\000\014\040" +
    "\131\064\141\065\140\066\137\067\130\001\002\000\004" +
    "\004\uff9a\001\002\000\004\004\042\001\002\000\004\004" +
    "\251\001\002\000\004\022\063\001\002\000\004\004\253" +
    "\001\002\000\004\013\373\001\002\000\004\004\uff8b\001" +
    "\002\000\004\004\256\001\002\000\004\014\354\001\002" +
    "\000\004\004\340\001\002\000\004\053\304\001\002\000" +
    "\004\053\276\001\002\000\004\053\263\001\002\000\012" +
    "\060\136\061\135\062\133\063\132\001\002\000\004\004" +
    "\uff8e\001\002\000\004\004\uff8d\001\002\000\004\004\271" +
    "\001\002\000\004\004\uff8f\001\002\000\004\004\uff8c\001" +
    "\002\000\004\022\273\001\002\000\004\004\uff85\001\002" +
    "\000\004\014\274\001\002\000\004\005\275\001\002\000" +
    "\004\004\uff38\001\002\000\004\055\301\001\002\000\004" +
    "\004\271\001\002\000\004\004\uff84\001\002\000\004\071" +
    "\302\001\002\000\004\004\uff4b\001\002\000\004\004\271" +
    "\001\002\000\030\040\310\054\312\056\134\060\316\061" +
    "\315\062\313\063\314\064\321\065\320\066\317\067\306" +
    "\001\002\000\004\004\uffcd\001\002\000\030\040\uffc1\054" +
    "\uffc1\060\uffc1\061\uffc1\062\uffc1\063\uffc1\064\uffc1\065\uffc1" +
    "\066\uffc1\067\uffc1\071\153\001\002\000\030\040\323\054" +
    "\325\060\331\061\330\062\327\063\326\064\334\065\333" +
    "\066\332\067\322\071\336\001\002\000\030\040\uffc0\054" +
    "\uffc0\060\uffc0\061\uffc0\062\uffc0\063\uffc0\064\uffc0\065\uffc0" +
    "\066\uffc0\067\uffc0\071\152\001\002\000\026\040\323\054" +
    "\325\060\331\061\330\062\327\063\326\064\334\065\333" +
    "\066\332\067\322\001\002\000\030\040\uffc9\054\uffc9\060" +
    "\uffc9\061\uffc9\062\uffc9\063\uffc9\064\uffc9\065\uffc9\066\uffc9" +
    "\067\uffc9\071\050\001\002\000\030\040\uffc6\054\uffc6\060" +
    "\uffc6\061\uffc6\062\uffc6\063\uffc6\064\uffc6\065\uffc6\066\uffc6" +
    "\067\uffc6\071\150\001\002\000\030\040\uffc5\054\uffc5\060" +
    "\uffc5\061\uffc5\062\uffc5\063\uffc5\064\uffc5\065\uffc5\066\uffc5" +
    "\067\uffc5\071\151\001\002\000\030\040\uffc7\054\uffc7\060" +
    "\uffc7\061\uffc7\062\uffc7\063\uffc7\064\uffc7\065\uffc7\066\uffc7" +
    "\067\uffc7\071\146\001\002\000\030\040\uffc8\054\uffc8\060" +
    "\uffc8\061\uffc8\062\uffc8\063\uffc8\064\uffc8\065\uffc8\066\uffc8" +
    "\067\uffc8\071\145\001\002\000\030\040\uffc2\054\uffc2\060" +
    "\uffc2\061\uffc2\062\uffc2\063\uffc2\064\uffc2\065\uffc2\066\uffc2" +
    "\067\uffc2\071\144\001\002\000\030\040\uffc3\054\uffc3\060" +
    "\uffc3\061\uffc3\062\uffc3\063\uffc3\064\uffc3\065\uffc3\066\uffc3" +
    "\067\uffc3\071\143\001\002\000\030\040\uffc4\054\uffc4\060" +
    "\uffc4\061\uffc4\062\uffc4\063\uffc4\064\uffc4\065\uffc4\066\uffc4" +
    "\067\uffc4\071\142\001\002\000\030\040\uffc1\054\uffc1\060" +
    "\uffc1\061\uffc1\062\uffc1\063\uffc1\064\uffc1\065\uffc1\066\uffc1" +
    "\067\uffc1\071\uffc1\001\002\000\030\040\uffc0\054\uffc0\060" +
    "\uffc0\061\uffc0\062\uffc0\063\uffc0\064\uffc0\065\uffc0\066\uffc0" +
    "\067\uffc0\071\uffc0\001\002\000\030\040\uffca\054\uffca\060" +
    "\uffca\061\uffca\062\uffca\063\uffca\064\uffca\065\uffca\066\uffca" +
    "\067\uffca\071\uffca\001\002\000\030\040\uffc9\054\uffc9\060" +
    "\uffc9\061\uffc9\062\uffc9\063\uffc9\064\uffc9\065\uffc9\066\uffc9" +
    "\067\uffc9\071\uffc9\001\002\000\030\040\uffc5\054\uffc5\060" +
    "\uffc5\061\uffc5\062\uffc5\063\uffc5\064\uffc5\065\uffc5\066\uffc5" +
    "\067\uffc5\071\uffc5\001\002\000\030\040\uffc6\054\uffc6\060" +
    "\uffc6\061\uffc6\062\uffc6\063\uffc6\064\uffc6\065\uffc6\066\uffc6" +
    "\067\uffc6\071\uffc6\001\002\000\030\040\uffc7\054\uffc7\060" +
    "\uffc7\061\uffc7\062\uffc7\063\uffc7\064\uffc7\065\uffc7\066\uffc7" +
    "\067\uffc7\071\uffc7\001\002\000\030\040\uffc8\054\uffc8\060" +
    "\uffc8\061\uffc8\062\uffc8\063\uffc8\064\uffc8\065\uffc8\066\uffc8" +
    "\067\uffc8\071\uffc8\001\002\000\030\040\uffc2\054\uffc2\060" +
    "\uffc2\061\uffc2\062\uffc2\063\uffc2\064\uffc2\065\uffc2\066\uffc2" +
    "\067\uffc2\071\uffc2\001\002\000\030\040\uffc3\054\uffc3\060" +
    "\uffc3\061\uffc3\062\uffc3\063\uffc3\064\uffc3\065\uffc3\066\uffc3" +
    "\067\uffc3\071\uffc3\001\002\000\030\040\uffc4\054\uffc4\060" +
    "\uffc4\061\uffc4\062\uffc4\063\uffc4\064\uffc4\065\uffc4\066\uffc4" +
    "\067\uffc4\071\uffc4\001\002\000\030\040\uffcb\054\uffcb\060" +
    "\uffcb\061\uffcb\062\uffcb\063\uffcb\064\uffcb\065\uffcb\066\uffcb" +
    "\067\uffcb\071\uffcb\001\002\000\004\004\uffcc\001\002\000" +
    "\004\004\uff86\001\002\000\006\014\354\022\353\001\002" +
    "\000\004\053\304\001\002\000\004\053\276\001\002\000" +
    "\004\053\263\001\002\000\004\004\uff8a\001\002\000\004" +
    "\004\271\001\002\000\004\004\uff88\001\002\000\004\004" +
    "\271\001\002\000\004\004\uff87\001\002\000\004\004\271" +
    "\001\002\000\004\004\uff89\001\002\000\004\013\371\001" +
    "\002\000\004\012\355\001\002\000\004\020\356\001\002" +
    "\000\004\021\357\001\002\000\010\044\362\045\360\046" +
    "\361\001\002\000\004\021\367\001\002\000\004\021\365" +
    "\001\002\000\004\021\363\001\002\000\004\005\364\001" +
    "\002\000\004\053\uff3f\001\002\000\004\005\366\001\002" +
    "\000\004\053\uff3e\001\002\000\004\005\370\001\002\000" +
    "\004\053\uff40\001\002\000\004\005\372\001\002\000\004" +
    "\004\uff36\001\002\000\004\005\374\001\002\000\004\004" +
    "\uff37\001\002\000\004\004\251\001\002\000\004\004\253" +
    "\001\002\000\004\004\uff71\001\002\000\004\004\u0101\001" +
    "\002\000\004\014\u0118\001\002\000\004\053\040\001\002" +
    "\000\004\004\u0113\001\002\000\004\053\u0105\001\002\000" +
    "\006\053\040\054\u010c\001\002\000\004\004\uff6a\001\002" +
    "\000\004\004\271\001\002\000\004\004\uff6b\001\002\000" +
    "\004\004\uff6c\001\002\000\006\057\u0110\071\u010f\001\002" +
    "\000\006\057\uff47\071\uff47\001\002\000\006\057\u010d\071" +
    "\050\001\002\000\004\054\u010e\001\002\000\006\057\uff46" +
    "\071\uff46\001\002\000\004\004\uff49\001\002\000\004\054" +
    "\u0111\001\002\000\006\057\uff48\071\uff48\001\002\000\004" +
    "\053\040\001\002\000\006\014\u0118\022\353\001\002\000" +
    "\004\053\u0105\001\002\000\004\004\uff70\001\002\000\004" +
    "\004\271\001\002\000\004\004\uff6e\001\002\000\004\012" +
    "\u0119\001\002\000\004\020\u011a\001\002\000\004\021\u011b" +
    "\001\002\000\006\015\u011c\052\u011d\001\002\000\004\021" +
    "\u0120\001\002\000\004\021\u011e\001\002\000\004\005\u011f" +
    "\001\002\000\004\053\uff3a\001\002\000\004\005\u0121\001" +
    "\002\000\004\053\uff39\001\002\000\004\004\271\001\002" +
    "\000\004\004\uff6f\001\002\000\004\004\271\001\002\000" +
    "\004\004\uff6d\001\002\000\004\004\251\001\002\000\004" +
    "\004\253\001\002\000\004\004\u012a\001\002\000\004\004" +
    "\uff95\001\002\000\004\014\u0138\001\002\000\004\053\304" +
    "\001\002\000\004\004\u0130\001\002\000\004\053\263\001" +
    "\002\000\004\004\271\001\002\000\004\004\uff90\001\002" +
    "\000\006\014\u0138\022\353\001\002\000\004\053\304\001" +
    "\002\000\004\053\263\001\002\000\004\004\uff94\001\002" +
    "\000\004\004\271\001\002\000\004\004\uff92\001\002\000" +
    "\004\004\271\001\002\000\004\004\uff93\001\002\000\004" +
    "\012\u0139\001\002\000\004\020\u013a\001\002\000\004\021" +
    "\u013b\001\002\000\006\044\362\045\360\001\002\000\004" +
    "\004\271\001\002\000\004\004\uff91\001\002\000\004\004" +
    "\251\001\002\000\004\004\253\001\002\000\004\004\uff79" +
    "\001\002\000\004\004\u0142\001\002\000\004\014\u0156\001" +
    "\002\000\004\053\u0151\001\002\000\004\053\u014c\001\002" +
    "\000\004\053\u014c\001\002\000\004\004\u0147\001\002\000" +
    "\006\014\u0156\022\353\001\002\000\004\053\u0151\001\002" +
    "\000\004\053\u014c\001\002\000\004\004\uff78\001\002\000" +
    "\004\053\u014c\001\002\000\004\056\134\001\002\000\004" +
    "\004\271\001\002\000\004\004\uff76\001\002\000\004\004" +
    "\271\001\002\000\004\004\uff75\001\002\000\004\070\u0154" +
    "\001\002\000\004\004\271\001\002\000\004\004\uff77\001" +
    "\002\000\004\071\u0155\001\002\000\004\004\uff44\001\002" +
    "\000\004\012\u0157\001\002\000\004\020\u0158\001\002\000" +
    "\004\021\u0159\001\002\000\010\047\u015a\050\u015b\051\u015c" +
    "\001\002\000\004\021\u0161\001\002\000\004\021\u015f\001" +
    "\002\000\004\021\u015d\001\002\000\004\005\u015e\001\002" +
    "\000\004\053\uff3b\001\002\000\004\005\u0160\001\002\000" +
    "\004\053\uff3c\001\002\000\004\005\u0162\001\002\000\004" +
    "\053\uff3d\001\002\000\004\004\271\001\002\000\004\004" +
    "\uff73\001\002\000\004\004\271\001\002\000\004\004\uff72" +
    "\001\002\000\004\004\271\001\002\000\004\004\uff74\001" +
    "\002\000\004\004\251\001\002\000\004\004\253\001\002" +
    "\000\004\004\uff83\001\002\000\004\004\u016d\001\002\000" +
    "\004\014\u0187\001\002\000\004\053\u0151\001\002\000\004" +
    "\004\u0179\001\002\000\004\053\u014c\001\002\000\004\053" +
    "\263\001\002\000\004\053\u014c\001\002\000\004\004\271" +
    "\001\002\000\004\004\uff7a\001\002\000\004\004\271\001" +
    "\002\000\004\004\uff7c\001\002\000\004\004\271\001\002" +
    "\000\004\004\uff7b\001\002\000\006\014\u0187\022\353\001" +
    "\002\000\004\053\u0151\001\002\000\004\053\u014c\001\002" +
    "\000\004\053\263\001\002\000\004\004\uff82\001\002\000" +
    "\004\053\u014c\001\002\000\004\004\271\001\002\000\004" +
    "\004\uff7e\001\002\000\004\004\271\001\002\000\004\004" +
    "\uff80\001\002\000\004\004\271\001\002\000\004\004\uff7f" +
    "\001\002\000\004\004\271\001\002\000\004\004\uff81\001" +
    "\002\000\004\012\u0188\001\002\000\004\020\u0189\001\002" +
    "\000\004\021\u018a\001\002\000\012\044\362\047\u015a\050" +
    "\u015b\051\u015c\001\002\000\004\004\271\001\002\000\004" +
    "\004\uff7d\001\002\000\004\012\u018e\001\002\000\004\020" +
    "\u018f\001\002\000\004\021\u0190\001\002\000\004\043\u0191" +
    "\001\002\000\004\021\u0192\001\002\000\004\005\u0193\001" +
    "\002\000\004\053\uff59\001\002\000\004\012\u0195\001\002" +
    "\000\004\020\u0196\001\002\000\004\021\u0197\001\002\000" +
    "\004\042\071\001\002\000\006\002\uff9e\004\uff9e\001\002" +
    "\000\006\002\uffa5\004\uffa5\001\002\000\004\004\u019b\001" +
    "\002\000\004\011\u01bf\001\002\000\004\053\304\001\002" +
    "\000\004\053\123\001\002\000\004\004\u019f\001\002\000" +
    "\006\011\u01bf\022\063\001\002\000\004\053\304\001\002" +
    "\000\004\053\123\001\002\000\004\004\u01a4\001\002\000" +
    "\006\002\uffa4\004\uffa4\001\002\000\006\015\u01b9\022\102" +
    "\001\002\000\006\002\uffa3\004\uffa3\001\002\000\004\004" +
    "\u01a7\001\002\000\004\016\u01af\001\002\000\004\004\uffa8" +
    "\001\002\000\004\004\u01aa\001\002\000\006\016\u01af\022" +
    "\u01ae\001\002\000\004\004\uffa9\001\002\000\004\004\100" +
    "\001\002\000\006\002\uffaa\004\uffaa\001\002\000\004\015" +
    "\u01b7\001\002\000\004\017\u01b0\001\002\000\004\020\u01b1" +
    "\001\002\000\004\021\u01b2\001\002\000\004\054\u01b3\001" +
    "\002\000\004\021\u01b4\001\002\000\004\022\u01b5\001\002" +
    "\000\004\005\u01b6\001\002\000\004\004\uff43\001\002\000" +
    "\004\005\u01b8\001\002\000\004\004\uff41\001\002\000\004" +
    "\005\u01ba\001\002\000\004\004\uff42\001\002\000\004\004" +
    "\042\001\002\000\004\004\uffa2\001\002\000\004\004\042" +
    "\001\002\000\004\004\uffa1\001\002\000\004\012\u01c0\001" +
    "\002\000\004\020\u01c1\001\002\000\004\021\u01c2\001\002" +
    "\000\006\033\070\040\u01c3\001\002\000\004\021\u01c4\001" +
    "\002\000\004\005\u01c5\001\002\000\004\053\uff5d\001\002" +
    "\000\004\004\042\001\002\000\004\004\uffa0\001\002\000" +
    "\004\004\042\001\002\000\004\004\uff9f\001\002\000\006" +
    "\002\uffbd\004\uffbd\001\002\000\004\004\u01d1\001\002\000" +
    "\004\004\u0205\001\002\000\004\053\304\001\002\000\004" +
    "\053\u01f6\001\002\000\004\053\u01f6\001\002\000\004\053" +
    "\123\001\002\000\004\011\u01de\001\002\000\004\053\123" +
    "\001\002\000\004\053\123\001\002\000\004\053\123\001" +
    "\002\000\004\053\123\001\002\000\004\004\042\001\002" +
    "\000\004\004\uffae\001\002\000\004\004\042\001\002\000" +
    "\004\004\uffac\001\002\000\004\004\042\001\002\000\004" +
    "\004\uffaf\001\002\000\004\004\042\001\002\000\004\004" +
    "\uffb2\001\002\000\004\012\u01df\001\002\000\004\020\u01e0" +
    "\001\002\000\004\021\u01e1\001\002\000\022\033\070\034" +
    "\u01e6\035\u01e4\036\u01e3\037\u01e2\040\u01c3\041\u01e7\052\u01e5" +
    "\001\002\000\004\021\u01f2\001\002\000\004\021\u01f0\001" +
    "\002\000\004\021\u01ee\001\002\000\004\021\u01ec\001\002" +
    "\000\004\021\u01ea\001\002\000\004\021\u01e8\001\002\000" +
    "\004\005\u01e9\001\002\000\004\053\uff5b\001\002\000\004" +
    "\005\u01eb\001\002\000\004\053\uff62\001\002\000\004\005" +
    "\u01ed\001\002\000\004\053\uff5c\001\002\000\004\005\u01ef" +
    "\001\002\000\004\053\uff61\001\002\000\004\005\u01f1\001" +
    "\002\000\004\053\uff60\001\002\000\004\005\u01f3\001\002" +
    "\000\004\053\uff5f\001\002\000\004\004\042\001\002\000" +
    "\004\004\uffab\001\002\000\004\072\u01fa\001\002\000\004" +
    "\004\042\001\002\000\004\004\uffce\001\002\000\004\004" +
    "\uffb0\001\002\000\004\071\u01fb\001\002\000\004\004\uff45" +
    "\001\002\000\004\004\042\001\002\000\004\004\uffb1\001" +
    "\002\000\004\004\042\001\002\000\004\004\uffad\001\002" +
    "\000\004\053\304\001\002\000\004\004\u01a4\001\002\000" +
    "\004\053\u01f6\001\002\000\004\053\u01f6\001\002\000\004" +
    "\053\123\001\002\000\006\011\u01de\022\063\001\002\000" +
    "\004\053\123\001\002\000\004\053\123\001\002\000\004" +
    "\053\123\001\002\000\004\053\123\001\002\000\004\004" +
    "\042\001\002\000\004\004\uffb6\001\002\000\004\004\042" +
    "\001\002\000\004\004\uffb4\001\002\000\004\004\042\001" +
    "\002\000\004\004\uffba\001\002\000\004\004\042\001\002" +
    "\000\004\004\uffb7\001\002\000\004\004\042\001\002\000" +
    "\004\004\uffb3\001\002\000\004\004\042\001\002\000\004" +
    "\004\uffb8\001\002\000\004\004\042\001\002\000\004\004" +
    "\uffb9\001\002\000\006\002\uffbc\004\uffbc\001\002\000\006" +
    "\002\uffbb\004\uffbb\001\002\000\004\004\042\001\002\000" +
    "\004\004\uffb5\001\002\000\004\004\ufff0\001\002\000\004" +
    "\004\u022f\001\002\000\004\004\ufff4\001\002\000\004\004" +
    "\uffef\001\002\000\004\004\ufff5\001\002\000\004\004\ufff3" +
    "\001\002\000\004\004\uffee\001\002\000\004\004\ufff1\001" +
    "\002\000\004\004\ufff2\001\002\000\004\007\161\001\002" +
    "\000\004\004\ufff8\001\002\000\004\004\ufffc\001\002\000" +
    "\004\004\ufff7\001\002\000\004\004\ufffd\001\002\000\004" +
    "\004\ufffb\001\002\000\004\004\ufff6\001\002\000\004\002" +
    "\ufffe\001\002\000\004\004\ufff9\001\002\000\004\004\ufffa" +
    "\001\002\000\006\007\161\022\u0230\001\002\000\004\006" +
    "\u0231\001\002\000\004\005\u0232\001\002\000\004\002\uff2b" +
    "\001\002\000\004\004\100\001\002\000\004\004\u0235\001" +
    "\002\000\004\011\u0255\001\002\000\004\053\123\001\002" +
    "\000\004\004\u0244\001\002\000\004\053\u01f6\001\002\000" +
    "\004\053\123\001\002\000\004\053\u01f6\001\002\000\004" +
    "\053\123\001\002\000\004\004\042\001\002\000\004\004" +
    "\uffda\001\002\000\004\004\042\001\002\000\004\004\uffdd" +
    "\001\002\000\004\004\042\001\002\000\004\004\uffde\001" +
    "\002\000\004\004\042\001\002\000\004\004\uffdc\001\002" +
    "\000\006\011\u0255\022\063\001\002\000\004\053\123\001" +
    "\002\000\004\053\u01f6\001\002\000\004\053\123\001\002" +
    "\000\004\053\u01f6\001\002\000\004\053\123\001\002\000" +
    "\004\004\uffe4\001\002\000\004\004\042\001\002\000\004" +
    "\004\uffdf\001\002\000\004\004\042\001\002\000\004\004" +
    "\uffe2\001\002\000\004\004\042\001\002\000\004\004\uffe3" +
    "\001\002\000\004\004\042\001\002\000\004\004\uffe1\001" +
    "\002\000\004\004\042\001\002\000\004\004\uffe0\001\002" +
    "\000\004\012\u0256\001\002\000\004\020\u0257\001\002\000" +
    "\004\021\u0258\001\002\000\014\033\070\034\u01e6\035\u01e4" +
    "\036\u01e3\037\u01e2\001\002\000\004\004\042\001\002\000" +
    "\004\004\uffdb\001\002\000\006\002\uffe5\004\uffe5\001\002" +
    "\000\004\002\001\001\002\000\004\053\040\001\002\000" +
    "\004\004\100\001\002\000\006\002\uffbf\004\uffbf\001\002" +
    "\000\004\004\042\001\002\000\004\004\uffbe\001\002\000" +
    "\004\004\100\001\002\000\006\002\uff63\004\uff63\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0261\000\052\002\011\003\006\005\004\006\014\012" +
    "\010\014\017\021\023\023\022\027\005\055\012\060\020" +
    "\132\013\133\007\134\016\135\026\136\021\137\024\140" +
    "\027\141\003\143\015\001\001\000\006\030\u0261\073\217" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\013\u025d\065\u025c\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\007\u0232\073" +
    "\u0233\001\001\000\002\001\001\000\044\004\u021c\006\u021f" +
    "\012\u021d\014\u0220\021\u0223\023\u0222\027\u021b\055\u021e\060" +
    "\u0221\132\013\133\007\134\016\135\026\136\021\137\024" +
    "\140\027\141\003\001\001\000\006\015\u01c9\073\u01ca\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\025\u0198" +
    "\073\u0199\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\030\216\073\217\001\001\000\002\001\001\000\006" +
    "\022\107\065\110\001\001\000\006\056\031\073\032\001" +
    "\001\000\002\001\001\000\004\142\100\001\001\000\010" +
    "\057\034\065\035\071\036\001\001\000\002\001\001\000" +
    "\010\065\053\071\054\074\055\001\001\000\004\076\050" +
    "\001\001\000\004\076\040\001\001\000\002\001\001\000" +
    "\004\075\042\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\075\051\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\076\060\001" +
    "\001\000\004\076\056\001\001\000\002\001\001\000\004" +
    "\075\057\001\001\000\002\001\001\000\004\075\061\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\142\153\001\001\000\032\011\123\076\125\077\116\100" +
    "\124\102\112\103\111\104\120\105\114\107\117\110\113" +
    "\111\121\113\115\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\075\126\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\142\u0197\001\001\000\006\031\220\065\221\001\001\000" +
    "\002\001\001\000\004\076\222\001\001\000\004\075\223" +
    "\001\001\000\006\032\225\071\226\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\076\227\001\001\000\004" +
    "\075\230\001\001\000\006\033\233\072\232\001\001\000" +
    "\002\001\001\000\026\034\245\040\236\043\241\046\237" +
    "\051\240\077\242\100\246\102\234\103\235\104\243\001" +
    "\001\000\002\001\001\000\004\075\u0168\001\001\000\004" +
    "\075\u013d\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\075\u0125\001\001" +
    "\000\004\075\374\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\075\247\001\001\000\004\074\251\001\001" +
    "\000\002\001\001\000\006\041\253\130\254\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\042\256\117\257" +
    "\120\261\121\260\001\001\000\002\001\001\000\012\117" +
    "\340\120\342\121\341\131\343\001\001\000\034\011\304" +
    "\076\125\077\116\100\124\102\112\103\111\104\120\105" +
    "\114\107\117\110\113\111\121\113\115\147\302\001\001" +
    "\000\004\112\276\001\001\000\014\037\265\105\266\107" +
    "\263\110\264\111\267\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\127\271\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\127\277\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\127" +
    "\336\001\001\000\006\150\306\151\310\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\151\334\001\001\000" +
    "\002\001\001\000\004\151\323\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\034\011" +
    "\304\076\125\077\116\100\124\102\112\103\111\104\120" +
    "\105\114\107\117\110\113\111\121\113\115\147\350\001" +
    "\001\000\004\112\346\001\001\000\014\037\344\105\266" +
    "\107\263\110\264\111\267\001\001\000\002\001\001\000" +
    "\004\127\345\001\001\000\002\001\001\000\004\127\347" +
    "\001\001\000\002\001\001\000\004\127\351\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\074" +
    "\375\001\001\000\006\052\376\130\377\001\001\000\002" +
    "\001\001\000\010\053\u0102\125\u0101\126\u0103\001\001\000" +
    "\002\001\001\000\004\076\u0123\001\001\000\010\125\u0111" +
    "\126\u0113\131\u0114\001\001\000\010\054\u0106\076\u0105\101" +
    "\u0107\001\001\000\006\076\u010a\146\u0109\001\001\000\002" +
    "\001\001\000\004\127\u0108\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\076\u0121" +
    "\001\001\000\002\001\001\000\010\054\u0115\076\u0105\101" +
    "\u0107\001\001\000\002\001\001\000\004\127\u0116\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\127\u0122\001\001\000\002" +
    "\001\001\000\004\127\u0124\001\001\000\002\001\001\000" +
    "\004\074\u0126\001\001\000\006\035\u0128\130\u0127\001\001" +
    "\000\010\036\u012b\117\u012a\120\u012c\001\001\000\002\001" +
    "\001\000\002\001\001\000\034\011\304\076\125\077\116" +
    "\100\124\102\112\103\111\104\120\105\114\107\117\110" +
    "\113\111\121\113\115\147\u013b\001\001\000\010\117\u0130" +
    "\120\u0131\131\u0132\001\001\000\014\037\u012d\105\266\107" +
    "\263\110\264\111\267\001\001\000\004\127\u012e\001\001" +
    "\000\002\001\001\000\002\001\001\000\034\011\304\076" +
    "\125\077\116\100\124\102\112\103\111\104\120\105\114" +
    "\107\117\110\113\111\121\113\115\147\u0135\001\001\000" +
    "\014\037\u0133\105\266\107\263\110\264\111\267\001\001" +
    "\000\002\001\001\000\004\127\u0134\001\001\000\002\001" +
    "\001\000\004\127\u0136\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\127\u013c\001\001\000\002\001\001\000\004" +
    "\074\u013e\001\001\000\006\047\u013f\130\u0140\001\001\000" +
    "\002\001\001\000\012\050\u0145\122\u0142\123\u0143\124\u0144" +
    "\001\001\000\002\001\001\000\004\153\u0166\001\001\000" +
    "\004\113\u0164\001\001\000\004\113\u0162\001\001\000\012" +
    "\122\u0147\123\u0148\124\u014a\131\u0149\001\001\000\002\001" +
    "\001\000\004\153\u0151\001\001\000\004\113\u014e\001\001" +
    "\000\002\001\001\000\004\113\u014c\001\001\000\002\001" +
    "\001\000\004\127\u014d\001\001\000\002\001\001\000\004" +
    "\127\u014f\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\127\u0152\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\127\u0163\001\001\000\002\001" +
    "\001\000\004\127\u0165\001\001\000\002\001\001\000\004" +
    "\127\u0167\001\001\000\002\001\001\000\004\074\u0169\001" +
    "\001\000\006\044\u016a\130\u016b\001\001\000\002\001\001" +
    "\000\014\045\u016e\120\u0170\122\u016d\123\u016f\124\u0171\001" +
    "\001\000\002\001\001\000\004\153\u018a\001\001\000\014" +
    "\120\u017b\122\u0179\123\u017a\124\u017d\131\u017c\001\001\000" +
    "\004\113\u0176\001\001\000\014\037\u0174\105\266\107\263" +
    "\110\264\111\267\001\001\000\004\113\u0172\001\001\000" +
    "\004\127\u0173\001\001\000\002\001\001\000\004\127\u0175" +
    "\001\001\000\002\001\001\000\004\127\u0177\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\153\u0184\001\001" +
    "\000\004\113\u0182\001\001\000\014\037\u0180\105\266\107" +
    "\263\110\264\111\267\001\001\000\002\001\001\000\004" +
    "\113\u017e\001\001\000\004\127\u017f\001\001\000\002\001" +
    "\001\000\004\127\u0181\001\001\000\002\001\001\000\004" +
    "\127\u0183\001\001\000\002\001\001\000\004\127\u0185\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\127\u018b\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\026\u019d\065\u019c\066\u019b" +
    "\001\001\000\002\001\001\000\034\011\304\076\125\077" +
    "\116\100\124\102\112\103\111\104\120\105\114\107\117" +
    "\110\113\111\121\113\115\147\u01c7\001\001\000\032\011" +
    "\u01c5\076\125\077\116\100\124\102\112\103\111\104\120" +
    "\105\114\107\117\110\113\111\121\113\115\001\001\000" +
    "\010\065\u01a0\066\u019f\074\u01a1\001\001\000\002\001\001" +
    "\000\034\011\304\076\125\077\116\100\124\102\112\103" +
    "\111\104\120\105\114\107\117\110\113\111\121\113\115" +
    "\147\u01bc\001\001\000\032\011\u01ba\076\125\077\116\100" +
    "\124\102\112\103\111\104\120\105\114\107\117\110\113" +
    "\111\121\113\115\001\001\000\010\017\u01a4\115\u01a5\142" +
    "\u01a2\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\020\u01a8\114\u01a7\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\114\u01aa\116\u01ab\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\142\u01ac\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\075\u01bb\001\001\000\002" +
    "\001\001\000\004\075\u01bd\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\075\u01c6\001\001\000\002\001\001\000\004" +
    "\075\u01c8\001\001\000\002\001\001\000\002\001\001\000" +
    "\024\016\u01cb\061\u01d1\062\u01cd\063\u01ce\064\u01d2\065\u01d4" +
    "\066\u01cc\067\u01d3\070\u01cf\001\001\000\024\061\u0206\062" +
    "\u0201\063\u0202\064\u0205\065\u0208\066\u01ff\067\u0207\070\u0203" +
    "\074\u0200\001\001\000\034\011\304\076\125\077\116\100" +
    "\124\102\112\103\111\104\120\105\114\107\117\110\113" +
    "\111\121\113\115\147\u01fd\001\001\000\006\106\u01fb\152" +
    "\u01f7\001\001\000\006\106\u01f6\152\u01f7\001\001\000\032" +
    "\011\u01f3\076\125\077\116\100\124\102\112\103\111\104" +
    "\120\105\114\107\117\110\113\111\121\113\115\001\001" +
    "\000\002\001\001\000\032\011\u01db\076\125\077\116\100" +
    "\124\102\112\103\111\104\120\105\114\107\117\110\113" +
    "\111\121\113\115\001\001\000\032\011\u01d9\076\125\077" +
    "\116\100\124\102\112\103\111\104\120\105\114\107\117" +
    "\110\113\111\121\113\115\001\001\000\032\011\u01d7\076" +
    "\125\077\116\100\124\102\112\103\111\104\120\105\114" +
    "\107\117\110\113\111\121\113\115\001\001\000\032\011" +
    "\u01d5\076\125\077\116\100\124\102\112\103\111\104\120" +
    "\105\114\107\117\110\113\111\121\113\115\001\001\000" +
    "\004\075\u01d6\001\001\000\002\001\001\000\004\075\u01d8" +
    "\001\001\000\002\001\001\000\004\075\u01da\001\001\000" +
    "\002\001\001\000\004\075\u01dc\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\075" +
    "\u01f4\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\075\u01f8\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\075\u01fc\001\001" +
    "\000\002\001\001\000\004\075\u01fe\001\001\000\002\001" +
    "\001\000\034\011\304\076\125\077\116\100\124\102\112" +
    "\103\111\104\120\105\114\107\117\110\113\111\121\113" +
    "\115\147\u0219\001\001\000\010\017\u0218\115\u01a5\142\u0217" +
    "\001\001\000\006\106\u0215\152\u01f7\001\001\000\006\106" +
    "\u0213\152\u01f7\001\001\000\032\011\u0211\076\125\077\116" +
    "\100\124\102\112\103\111\104\120\105\114\107\117\110" +
    "\113\111\121\113\115\001\001\000\002\001\001\000\032" +
    "\011\u020f\076\125\077\116\100\124\102\112\103\111\104" +
    "\120\105\114\107\117\110\113\111\121\113\115\001\001" +
    "\000\032\011\u020d\076\125\077\116\100\124\102\112\103" +
    "\111\104\120\105\114\107\117\110\113\111\121\113\115" +
    "\001\001\000\032\011\u020b\076\125\077\116\100\124\102" +
    "\112\103\111\104\120\105\114\107\117\110\113\111\121" +
    "\113\115\001\001\000\032\011\u0209\076\125\077\116\100" +
    "\124\102\112\103\111\104\120\105\114\107\117\110\113" +
    "\111\121\113\115\001\001\000\004\075\u020a\001\001\000" +
    "\002\001\001\000\004\075\u020c\001\001\000\002\001\001" +
    "\000\004\075\u020e\001\001\000\002\001\001\000\004\075" +
    "\u0210\001\001\000\002\001\001\000\004\075\u0212\001\001" +
    "\000\002\001\001\000\004\075\u0214\001\001\000\002\001" +
    "\001\000\004\075\u0216\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\075\u021a\001\001\000" +
    "\002\001\001\000\002\001\001\000\044\006\u0228\012\u0226" +
    "\014\u0229\021\u022d\023\u022c\027\u0225\055\u0227\060\u022a\132" +
    "\013\133\007\134\016\135\026\136\021\137\024\140\027" +
    "\141\003\144\u022b\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\142\u025a\001\001\000\016\010\u0236\061\u0238\062\u0239" +
    "\063\u0237\064\u0235\065\u023a\001\001\000\002\001\001\000" +
    "\032\011\u0258\076\125\077\116\100\124\102\112\103\111" +
    "\104\120\105\114\107\117\110\113\111\121\113\115\001" +
    "\001\000\016\061\u0246\062\u0247\063\u0245\064\u0244\065\u0248" +
    "\074\u0249\001\001\000\006\106\u0241\152\u01f7\001\001\000" +
    "\032\011\u023f\076\125\077\116\100\124\102\112\103\111" +
    "\104\120\105\114\107\117\110\113\111\121\113\115\001" +
    "\001\000\006\106\u023d\152\u01f7\001\001\000\032\011\u023b" +
    "\076\125\077\116\100\124\102\112\103\111\104\120\105" +
    "\114\107\117\110\113\111\121\113\115\001\001\000\004" +
    "\075\u023c\001\001\000\002\001\001\000\004\075\u023e\001" +
    "\001\000\002\001\001\000\004\075\u0240\001\001\000\002" +
    "\001\001\000\004\075\u0242\001\001\000\002\001\001\000" +
    "\002\001\001\000\032\011\u0252\076\125\077\116\100\124" +
    "\102\112\103\111\104\120\105\114\107\117\110\113\111" +
    "\121\113\115\001\001\000\006\106\u0250\152\u01f7\001\001" +
    "\000\032\011\u024e\076\125\077\116\100\124\102\112\103" +
    "\111\104\120\105\114\107\117\110\113\111\121\113\115" +
    "\001\001\000\006\106\u024c\152\u01f7\001\001\000\032\011" +
    "\u024a\076\125\077\116\100\124\102\112\103\111\104\120" +
    "\105\114\107\117\110\113\111\121\113\115\001\001\000" +
    "\002\001\001\000\004\075\u024b\001\001\000\002\001\001" +
    "\000\004\075\u024d\001\001\000\002\001\001\000\004\075" +
    "\u024f\001\001\000\002\001\001\000\004\075\u0251\001\001" +
    "\000\002\001\001\000\004\075\u0253\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\075\u0259\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\076\u025f" +
    "\001\001\000\004\142\u025e\001\001\000\002\001\001\000" +
    "\004\075\u0260\001\001\000\002\001\001\000\004\142\u0262" +
    "\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




	ArrayList<String> etiquetas = new ArrayList<>();
	ArrayList<Parametro> parametros = new ArrayList<>();
	ArrayList<Parametro> atributos = new ArrayList<>();
	
	String usuarioCreacionGlobal = "default";
	String usuarioModificacionGlobal = "default";
	Date fechaActual = new Date();
	SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
	
	Acciones acciones = new Acciones();
	
 	
	public void crearParametro(String nombre,String lexema){
		Parametro parametro = new Parametro(nombre,lexema);
		parametros.add(parametro);

	}
	
	public void crearEtiqueta(String lexema){
		etiquetas.add(lexema);
	}
	
	public void crearAtributo(String nombre,String lexema){
		Parametro parametro = new Parametro(nombre,lexema);
		atributos.add(parametro);
	}


	
	// Connect this parser to a scanner!

	public parser(AnalizadorLexico1 lex,String usuario) {
		super(lex);
                this.usuarioCreacionGlobal = usuario;
                this.usuarioModificacionGlobal = usuario;
	}

        public void syntax_error(Symbol cur_token) {
            System.out.println("Error "+cur_token);
        }

	


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= estructura_definitiva EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String start_val = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // estructura_definitiva ::= estructura_global 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_definitiva",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // estructura_definitiva ::= estructura_global3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_definitiva",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // estructura_global ::= inicio_acciones estructura_global2 fin_acciones 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // estructura_global2 ::= estructura_global2 estructura_nuevo_sitio_web 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // estructura_global2 ::= estructura_global2 estructura_borrar_sitio_web 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // estructura_global2 ::= estructura_global2 estructura_nueva_pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // estructura_global2 ::= estructura_global2 estructura_borrar_pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // estructura_global2 ::= estructura_global2 estructura_modificar_pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // estructura_global2 ::= estructura_global2 estructura_agregar_componente 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // estructura_global2 ::= estructura_global2 estructura_borrar_componente 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // estructura_global2 ::= estructura_global2 estructura_modificar_componente 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // estructura_global2 ::= estructura_nuevo_sitio_web 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // estructura_global2 ::= estructura_borrar_sitio_web 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // estructura_global2 ::= estructura_nueva_pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // estructura_global2 ::= estructura_borrar_pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // estructura_global2 ::= estructura_modificar_pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // estructura_global2 ::= estructura_agregar_componente 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // estructura_global2 ::= estructura_borrar_componente 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // estructura_global2 ::= estructura_modificar_componente 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // estructura_global3 ::= estructura_nuevo_sitio_web 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global3",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // estructura_global3 ::= estructura_borrar_sitio_web 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global3",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // estructura_global3 ::= estructura_nueva_pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global3",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // estructura_global3 ::= estructura_borrar_pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global3",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // estructura_global3 ::= estructura_modificar_pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global3",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // estructura_global3 ::= estructura_agregar_componente 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global3",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // estructura_global3 ::= estructura_borrar_componente 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global3",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // estructura_global3 ::= estructura_modificar_componente 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_global3",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // estructura_nuevo_sitio_web ::= inicio_nuevo_sitio_web parametros fin_accion 
            {
              String RESULT =null;
		int e5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		

boolean tieneId=false,tieneUsuarioCreacion=false,tieneFechaCreacion=false,tieneFechaModificacion=false,tieneUsuarioModificacion=false;
boolean error=false;

String id=null,usuarioCreacion=null,usuarioModificacion=null;
Date fechaCreacionDate=null,fechaModificacionDate=null;

for(int i=0;i<parametros.size();i++){
	if(parametros.get(i).getNombre().equals("ID")){
		if(tieneId==false){
			tieneId=true;
			id = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("USUARIO_CREACION")){
		if(tieneUsuarioCreacion==false){
			tieneUsuarioCreacion=true;
			usuarioCreacion = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("FECHA_CREACION")){
		if(tieneFechaCreacion==false){
			tieneFechaCreacion=true;
			fechaCreacionDate = formato.parse(parametros.get(i).getLexema());
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("FECHA_MODIFICACION")){
		if(tieneFechaModificacion==false){
			tieneFechaModificacion=true;
			fechaModificacionDate = formato.parse(parametros.get(i).getLexema());
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("USUARIO_MODIFICACION")){
		if(tieneUsuarioModificacion==false){
			tieneUsuarioModificacion=true;
			usuarioModificacion = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}
}

if(tieneId==true){
	if(tieneUsuarioCreacion==false){
		usuarioCreacion = usuarioCreacionGlobal;
	}
	if(tieneUsuarioModificacion==false){
		usuarioModificacion = usuarioModificacionGlobal;
	}
	if(tieneFechaCreacion==false){
		fechaCreacionDate = fechaActual;
	}
	if(tieneFechaModificacion==false){
		fechaModificacionDate = fechaActual;
	}
	if(error==false){
	NuevoSitioWeb nuevo = new NuevoSitioWeb(id,usuarioCreacion,fechaCreacionDate,fechaModificacionDate,usuarioModificacion);
	acciones.accionNuevoSitioWeb(nuevo,usuarioModificacionGlobal);
	parametros= new ArrayList<>();
	}else{
		System.out.println("HAY CAMPOS REPETIDOS");
	}
}else{
	error=true;
	System.out.println("FALTAN PARAMETROS OBLIGATORIOS");
}


              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_nuevo_sitio_web",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // parametros ::= inicio_parametros parametro fin_parametros 
            {
              String RESULT =null;
		int e25left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e25right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e25 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // parametro ::= parametro inicio_parametro_usuario_creacion corchetes fin_parametro 
            {
              String RESULT =null;
		int e6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e6 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("USUARIO_CREACION",e6);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // parametro ::= parametro inicio_parametro_fecha_creacion corchetes_fecha fin_parametro 
            {
              String RESULT =null;
		int e7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e7 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("FECHA_CREACION",e7);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // parametro ::= parametro inicio_parametro_fecha_modificacion corchetes_fecha fin_parametro 
            {
              String RESULT =null;
		int e8left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e8right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e8 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("FECHA_MODIFICACION",e8);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // parametro ::= parametro inicio_parametro_usuario_modificacion corchetes fin_parametro 
            {
              String RESULT =null;
		int e9left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e9right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e9 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("USUARIO_MODIFICACION",e9);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // parametro ::= parametro inicio_parametro_id corchetes fin_parametro 
            {
              String RESULT =null;
		int e10left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e10right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e10 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("ID",e10);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // parametro ::= inicio_parametro_usuario_creacion corchetes fin_parametro 
            {
              String RESULT =null;
		int e11left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e11right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e11 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("USUARIO_CREACION",e11);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // parametro ::= inicio_parametro_fecha_creacion corchetes_fecha fin_parametro 
            {
              String RESULT =null;
		int e12left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e12right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e12 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("USUARIO_CREACION",e12);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // parametro ::= inicio_parametro_fecha_modificacion corchetes_fecha fin_parametro 
            {
              String RESULT =null;
		int e13left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e13right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e13 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("FECHA_MODIFICACION",e13);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // parametro ::= inicio_parametro_usuario_modificacion corchetes fin_parametro 
            {
              String RESULT =null;
		int e14left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e14right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e14 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("USUARIO_MODIFICACION",e14);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // parametro ::= inicio_parametro_id corchetes fin_parametro 
            {
              String RESULT =null;
		int e15left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e15right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e15 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("ID",e15);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // corchetes ::= corchete_id 
            {
              String RESULT =null;
		int e16left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e16right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e16 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=e16;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // corchetes ::= corchete_titulo 
            {
              String RESULT =null;
		RESULT="TITULO";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // corchetes ::= corchete_parrafo 
            {
              String RESULT =null;
		RESULT="PARRAFO";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // corchetes ::= corchete_imagen 
            {
              String RESULT =null;
		RESULT="IMAGEN";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // corchetes ::= corchete_video 
            {
              String RESULT =null;
		RESULT="VIDEO";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // corchetes ::= corchete_menu 
            {
              String RESULT =null;
		RESULT="MENU";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // corchetes ::= corchete_derecha 
            {
              String RESULT =null;
		RESULT="DERECHA";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // corchetes ::= corchete_izquierda 
            {
              String RESULT =null;
		RESULT="IZQUIERDA";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // corchetes ::= corchete_centrar 
            {
              String RESULT =null;
		RESULT="CENTRAR";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // corchetes ::= corchete_justificar 
            {
              String RESULT =null;
		RESULT="JUSTIFICAR";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // corchetes ::= corchete_numeros 
            {
              String RESULT =null;
		int e17left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e17right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e17 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=e17;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // corchetes_fecha ::= corchete_fecha 
            {
              String RESULT =null;
		int e18left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e18right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e18 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=e18;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes_fecha",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // corchetes_varias_palabras ::= corchetes 
            {
              String RESULT =null;
		int e19left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e19right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e19 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=e19;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes_varias_palabras",101, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // corchetes_varias_palabras ::= CORCHETE_ABIERTO varias_palabras CORCHETE_CERRADO 
            {
              String RESULT =null;
		int e20left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e20right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e20 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT=e20;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes_varias_palabras",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // varias_palabras ::= varias_palabras palabra 
            {
              String RESULT =null;
		int e26left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e26right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e26 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int e21left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e21right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e21 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e26+" "+e21;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("varias_palabras",102, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // varias_palabras ::= palabra palabra 
            {
              String RESULT =null;
		int e22left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e22right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e22 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int e23left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e23right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e23 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e22 + " "+ e23;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("varias_palabras",102, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // palabra ::= IDD 
            {
              String RESULT =null;
		int e24left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e24right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e24 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT=e24;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabra",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // palabra ::= DERECHA 
            {
              String RESULT =null;
		RESULT="DERECHA";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabra",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // palabra ::= IZQUIERDA 
            {
              String RESULT =null;
		RESULT="IZQUIERDA";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabra",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // palabra ::= CENTRAR 
            {
              String RESULT =null;
		RESULT="CENTRAR";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabra",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // palabra ::= JUSTIFICAR 
            {
              String RESULT =null;
		RESULT="JUSTIFICAR";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabra",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // palabra ::= PARRAFO 
            {
              String RESULT =null;
		RESULT="PARRAFO";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabra",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // palabra ::= IMAGEN 
            {
              String RESULT =null;
		RESULT="IMAGEN";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabra",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // palabra ::= VIDEO 
            {
              String RESULT =null;
		RESULT="VIDEO";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabra",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // palabra ::= MENU 
            {
              String RESULT =null;
		RESULT="MENU";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabra",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // palabra ::= TITULO 
            {
              String RESULT =null;
		RESULT="TITULO";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("palabra",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // estructura_borrar_sitio_web ::= inicio_borrar_sitio_web parametro_id fin_accion 
            {
              String RESULT =null;
		int e53left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e53right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e53 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		

BorrarSitioWeb borrar = new BorrarSitioWeb(e53);
acciones.accionBorrarSitioWeb(borrar);

              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_borrar_sitio_web",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // parametro_id ::= inicio_parametro_id corchete_id fin_parametro 
            {
              String RESULT =null;
		int e52left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e52right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e52 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT=e52;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_id",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // estructura_nueva_pagina ::= inicio_nueva_pagina parametros_nueva_pagina 
            {
              String RESULT =null;
		int e28left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e28right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e28 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		



boolean tieneId=false,tieneSitio=false,tienePadre=false,tieneTitulo=false,tieneUsuarioCreacion=false,tieneFechaCreacion=false,tieneFechaModificacion=false,tieneUsuarioModificacion=false;
boolean error=false;

String id=null,sitio=null,padre=null,titulo=null,usuarioCreacion=null,usuarioModificacion=null;
Date fechaCreacion=null,fechaModificacion=null;

for(int i=0;i<parametros.size();i++){
	if(parametros.get(i).getNombre().equals("ID")){
		if(tieneId==false){
			tieneId=true;
			id = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("TITULO")){
		if(tieneTitulo==false){
			tieneTitulo=true;
			titulo = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("SITIO")){
		if(tieneSitio==false){
			tieneSitio=true;
			sitio = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("PADRE")){
		if(tienePadre==false){
			tienePadre=true;
			padre = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("USUARIO_CREACION")){
		if(tieneUsuarioCreacion==false){
			tieneUsuarioCreacion=true;
			usuarioCreacion = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("FECHA_CREACION")){
		if(tieneFechaCreacion==false){
			tieneFechaCreacion=true;
			fechaCreacion = formato.parse(parametros.get(i).getLexema());
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("FECHA_MODIFICACION")){
		if(tieneFechaModificacion==false){
			tieneFechaModificacion=true;
			fechaModificacion = formato.parse(parametros.get(i).getLexema());
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("USUARIO_MODIFICACION")){
		if(tieneUsuarioModificacion==false){
			tieneUsuarioModificacion=true;
			usuarioModificacion = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}
}

if(tieneId==true && tieneSitio==true){
	if(tieneUsuarioCreacion==false){
		usuarioCreacion = usuarioCreacionGlobal;
	}
	if(tieneUsuarioModificacion==false){
		usuarioModificacion = usuarioModificacionGlobal;
	}
	if(tieneFechaCreacion==false){
		fechaCreacion = fechaActual;
	}
	if(tieneFechaModificacion==false){
		fechaModificacion = fechaActual;
	}
	
	
	if(error==false){
	NuevaPagina pagina = new 		NuevaPagina(id,id,titulo,sitio,padre,usuarioCreacion,fechaCreacion,fechaModificacion,usuarioModificacion,etiquetas);
	acciones.accionNuevaPagina(pagina);
	}else{
		System.out.println("HAY CAMPOS REPETIDOS");
	}
	
}else{
	System.out.println("FALTAN PARAMETROS OBLIGATORIOS");
	error=true;
}
	
	etiquetas = new ArrayList<>();
	parametros = new ArrayList<>();



              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_nueva_pagina",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // parametros_nueva_pagina ::= inicio_parametros parametro_nueva_pagina fin_parametros fin_accion 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_nueva_pagina",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // parametros_nueva_pagina ::= inicio_parametros parametro_nueva_pagina fin_parametros etiquetas_nueva_pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_nueva_pagina",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // parametro_nueva_pagina ::= parametro_nueva_pagina inicio_parametro_usuario_creacion corchetes fin_parametro 
            {
              String RESULT =null;
		int e29left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e29right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e29 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("USUARIO_CREACION",e29);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // parametro_nueva_pagina ::= parametro_nueva_pagina inicio_parametro_fecha_creacion corchetes_fecha fin_parametro 
            {
              String RESULT =null;
		int e30left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e30right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e30 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("FECHA_CREACION",e30);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // parametro_nueva_pagina ::= parametro_nueva_pagina inicio_parametro_fecha_modificacion corchetes_fecha fin_parametro 
            {
              String RESULT =null;
		int e31left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e31right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e31 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("FECHA_MODIFICACION",e31);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // parametro_nueva_pagina ::= parametro_nueva_pagina inicio_parametro_usuario_modificacion corchetes fin_parametro 
            {
              String RESULT =null;
		int e32left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e32right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e32 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("USUARIO_MODIFICACION",e32);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // parametro_nueva_pagina ::= parametro_nueva_pagina inicio_parametro_id corchetes fin_parametro 
            {
              String RESULT =null;
		int e33left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e33right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e33 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("ID",e33);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // parametro_nueva_pagina ::= parametro_nueva_pagina inicio_parametro_titulo corchetes_varias_palabras fin_parametro 
            {
              String RESULT =null;
		int e34left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e34right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e34 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("TITULO",e34);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // parametro_nueva_pagina ::= parametro_nueva_pagina inicio_parametro_padre corchetes fin_parametro 
            {
              String RESULT =null;
		int e35left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e35right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e35 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("PADRE",e35);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // parametro_nueva_pagina ::= parametro_nueva_pagina inicio_parametro_sitio corchetes fin_parametro 
            {
              String RESULT =null;
		int e50left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e50right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e50 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("SITIO",e50);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // parametro_nueva_pagina ::= inicio_parametro_usuario_creacion corchetes fin_parametro 
            {
              String RESULT =null;
		int e36left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e36right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e36 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("USUARIO_CREACION",e36);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // parametro_nueva_pagina ::= inicio_parametro_fecha_creacion corchetes_fecha fin_parametro 
            {
              String RESULT =null;
		int e37left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e37right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e37 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("FECHA_CREACION",e37);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // parametro_nueva_pagina ::= inicio_parametro_fecha_modificacion corchetes_fecha fin_parametro 
            {
              String RESULT =null;
		int e38left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e38right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e38 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("FECHA_MODIFICACION",e38);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // parametro_nueva_pagina ::= inicio_parametro_usuario_modificacion corchetes fin_parametro 
            {
              String RESULT =null;
		int e39left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e39right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e39 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("USUARIO_MODIFICACION",e39);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // parametro_nueva_pagina ::= inicio_parametro_id corchetes fin_parametro 
            {
              String RESULT =null;
		int e40left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e40right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e40 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("ID",e40);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // parametro_nueva_pagina ::= inicio_parametro_titulo corchetes_varias_palabras fin_parametro 
            {
              String RESULT =null;
		int e41left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e41right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e41 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("TITULO",e41);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // parametro_nueva_pagina ::= inicio_parametro_padre corchetes fin_parametro 
            {
              String RESULT =null;
		int e42left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e42right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e42 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("PADRE",e42);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // parametro_nueva_pagina ::= inicio_parametro_sitio corchetes fin_parametro 
            {
              String RESULT =null;
		int e51left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e51right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e51 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("SITIO",e51);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // etiquetas_nueva_pagina ::= inicio_etiquetas etiqueta_nueva_pagina fin_etiquetas fin_accion 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("etiquetas_nueva_pagina",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // etiqueta_nueva_pagina ::= etiqueta_nueva_pagina inicio_etiqueta_id 
            {
              String RESULT =null;
		int e43left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e43right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e43 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		crearEtiqueta(e43);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("etiqueta_nueva_pagina",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // etiqueta_nueva_pagina ::= inicio_etiqueta_id 
            {
              String RESULT =null;
		int e44left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e44right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e44 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		crearEtiqueta(e44);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("etiqueta_nueva_pagina",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // estructura_borrar_pagina ::= inicio_borrar_pagina parametro_borrar_pagina fin_accion 
            {
              String RESULT =null;
		int e53left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e53right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e53 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		


BorrarPagina pagina = new BorrarPagina(e53);
acciones.accionBorrarPagina(pagina,false);


              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_borrar_pagina",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // parametro_borrar_pagina ::= inicio_parametro_id corchetes fin_parametro 
            {
              String RESULT =null;
		int e52left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e52right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e52 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT=e52;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_borrar_pagina",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // estructura_modificar_pagina ::= inicio_modificar_pagina parametros_modificar_pagina 
            {
              String RESULT =null;
		


boolean tieneId=false,tieneTitulo=false,tieneFechaModificacion=false,tieneUsuarioModificacion=false;
boolean error=false;

String id=null,titulo=null,usuarioModificacion=null;
Date fechaModificacion=null;

for(int i=0;i<parametros.size();i++){
	if(parametros.get(i).getNombre().equals("ID")){
		if(tieneId==false){
			tieneId=true;
			id = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("TITULO")){
		if(tieneTitulo==false){
			tieneTitulo=true;
			titulo = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}
}

if(tieneId==true){
	
	if(tieneUsuarioModificacion==false){
		usuarioModificacion = usuarioModificacionGlobal;
	}
	if(tieneFechaModificacion==false){
		fechaModificacion = fechaActual;
	}
	
	
	if(error==false){

	if(tieneTitulo==false && etiquetas.size()==0){
		System.out.println("NO HAY NI TITULO NI ETIQUETAS QUE CAMBIAR");
	}else{
		ModificarPagina pagina = new ModificarPagina(id,titulo,usuarioModificacion,fechaModificacion,etiquetas);
		acciones.accionModificarPagina(pagina);
	
	}

	}else{
		System.out.println("HAY CAMPOS REPETIDOS");
	}
	
}else{
	System.out.println("FALTAN PARAMETROS OBLIGATORIOS");
	error=true;
}
	
	etiquetas = new ArrayList<>();
	parametros = new ArrayList<>();



              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_modificar_pagina",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // parametros_modificar_pagina ::= inicio_parametros parametro_modificar_pagina fin_parametros fin_accion 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_pagina",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // parametros_modificar_pagina ::= inicio_parametros parametro_modificar_pagina fin_parametros etiquetas_nueva_pagina 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_pagina",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // parametro_modificar_pagina ::= parametro_modificar_pagina inicio_parametro_id corchetes fin_parametro 
            {
              String RESULT =null;
		int e55left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e55right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e55 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("ID",e55);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_modificar_pagina",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // parametro_modificar_pagina ::= parametro_modificar_pagina inicio_parametro_titulo corchetes_varias_palabras fin_parametro 
            {
              String RESULT =null;
		int e56left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e56right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e56 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("TITULO",e56);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_modificar_pagina",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // parametro_modificar_pagina ::= inicio_parametro_id corchetes fin_parametro 
            {
              String RESULT =null;
		int e57left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e57right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e57 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("ID",e57);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_modificar_pagina",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // parametro_modificar_pagina ::= inicio_parametro_titulo corchetes_varias_palabras fin_parametro 
            {
              String RESULT =null;
		int e58left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e58right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e58 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("TITULO",e58);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_modificar_pagina",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // estructura_agregar_componente ::= inicio_agregar_componente opcion_agregar_componente fin_accion 
            {
              String RESULT =null;
		



boolean tieneId=false,tienePagina=false,tieneClase=false;
boolean error=false;

String id=null,pagina=null,clase=null;

ComponenteMenu compMenu=null;
ComponenteParrafo compParrafo=null;
ComponenteImagen compImagen=null;
ComponenteVideo compVideo=null;
ComponenteTitulo compTitulo=null;

boolean tieneTexto=false,tieneAlineacion=false,tieneColor=false,tieneOrigen=false,tieneAltura=false,tieneAncho=false,tienePadre=false,tieneEtiquetas=false;

String texto=null, alineacion=null,color=null,origen=null,altura=null,ancho=null,padre=null;
for(int i=0;i<parametros.size();i++){
	if(parametros.get(i).getNombre().equals("ID")){
		if(tieneId==false){
			tieneId=true;
			id = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("PAGINA")){
		if(tienePagina==false){
			tienePagina=true;
			pagina = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("CLASE")){
		if(tieneClase==false){
			tieneClase=true;
			clase = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}
}

if(tieneId==true && tienePagina==true && tieneClase==true){
	
	if(error==false){
		
	
	if(clase.equals("TITULO")){
		for(int i=0;i<atributos.size();i++){
			if(atributos.get(i).getNombre().equals("TEXTO")){
				if(tieneTexto==false){
					tieneTexto=true;
					texto = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("ALINEACION")){
				if(tieneAlineacion==false){
					tieneAlineacion=true;
					alineacion = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}
		}
		
		if(tieneTexto==true){
			if(error==false){
				compTitulo = new ComponenteTitulo(texto,alineacion);
			}else{
				System.out.println("HAY CAMPOS REPETIDOS");
			}
		}else{
			System.out.println("FALTAN ATRIBUTOS OBLIGATORIOS PARA TITULO");
		}
		
	
	}else if(clase.equals("PARRAFO")){
		for(int i=0;i<atributos.size();i++){
			if(atributos.get(i).getNombre().equals("TEXTO")){
				if(tieneTexto==false){
					tieneTexto=true;
					texto = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("ALINEACION")){
				if(tieneAlineacion==false){
					tieneAlineacion=true;
					alineacion = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("COLOR")){
				if(tieneColor==false){
					tieneColor=true;
					color = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}
		}
		
		if(tieneTexto==true){
			if(error==false){
				compParrafo = new ComponenteParrafo(texto,alineacion,color);
			}else{
				System.out.println("HAY CAMPOS REPETIDOS");
			}
		}else{
			System.out.println("FALTAN ATRIBUTOS OBLIGATORIOS PARA PARRAFO");
		}
	
	
	}else if(clase.equals("IMAGEN")){
		for(int i=0;i<atributos.size();i++){
			if(atributos.get(i).getNombre().equals("ORIGEN")){
				if(tieneOrigen==false){
					tieneOrigen=true;
					origen = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("ALINEACION")){
				if(tieneAlineacion==false){
					tieneAlineacion=true;
					alineacion = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("ALTURA")){
				if(tieneAltura==false){
					tieneAltura=true;
					altura = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("ANCHO")){
				if(tieneAncho==false){
					tieneAncho=true;
					ancho = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}
		}
		
		if(tieneOrigen==true && tieneAncho==true && tieneAltura==true){
			if(error==false){
				compImagen = new ComponenteImagen(origen,alineacion,Integer.parseInt(altura),Integer.parseInt(ancho));
			}else{
				System.out.println("HAY CAMPOS REPETIDOS");
			}
		}else{
			System.out.println("FALTAN ATRIBUTOS OBLIGATORIOS PARA IMAGEN");
		}
	
	
	}else if(clase.equals("VIDEO")){
		for(int i=0;i<atributos.size();i++){
			if(atributos.get(i).getNombre().equals("ORIGEN")){
				if(tieneOrigen==false){
					tieneOrigen=true;
					origen = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("ALTURA")){
				if(tieneAltura==false){
					tieneAltura=true;
					altura = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("ANCHO")){
				if(tieneAncho==false){
					tieneAncho=true;
					ancho = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}
		}
		
		if(tieneOrigen==true && tieneAncho==true && tieneAltura==true){
			if(error==false){
				compVideo = new ComponenteVideo(origen,Integer.parseInt(altura),Integer.parseInt(ancho));
			}else{
				System.out.println("HAY CAMPOS REPETIDOS");
			}
		}else{
			System.out.println("FALTAN ATRIBUTOS OBLIGATORIOS PARA VIDEO");
		}

	}else if(clase.equals("MENU")){
		for(int i=0;i<atributos.size();i++){
			if(atributos.get(i).getNombre().equals("PADRE")){
				if(tienePadre==false){
					tienePadre=true;
					padre = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("ETIQUETAS")){
				if(tieneEtiquetas==false){
					tieneEtiquetas=true;
				}else{
					error=true;
				}
			}
		}
		
		if(tienePadre==true || tieneEtiquetas==true){
			if(error==false){
				compMenu = new ComponenteMenu(padre,etiquetas);
			}else{
				System.out.println("HAY CAMPOS REPETIDOS");
			}
		}else{
			System.out.println("FALTAN ATRIBUTOS OBLIGATORIOS PARA MENU");
		}
	}

		
	}else{
		System.out.println("HAY CAMPOS REPETIDOS");
	}
	
	if (error == false) {
                            if (compTitulo == null && compParrafo == null && compImagen == null && compVideo == null && compMenu == null) {
                                System.out.println("NO HAY NINGUN COMPONENTE QUE UTILIZAR");
                            } else {

                                AgregarComponente componente = new AgregarComponente(id, pagina, clase, compTitulo, compParrafo, compImagen, compVideo, compMenu);
                                acciones.accionAgregarComponente(componente);
                            }

                        } else {
                            System.out.println("HAY ERRORES PARA AGREGAR COMPONENTE");
                        }
	
	
}else{
	System.out.println("FALTAN PARAMETROS OBLIGATORIOS");
	error=true;
}
	
	etiquetas = new ArrayList<>();
	parametros= new ArrayList<>();
	atributos= new ArrayList<>();




              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_agregar_componente",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // opcion_agregar_componente ::= inicio_parametros parametro_id_componente 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("opcion_agregar_componente",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // parametro_id_componente ::= inicio_parametro_id corchete_id fin_parametro parametro_pagina 
            {
              String RESULT =null;
		int e58left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e58right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String e58 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		crearParametro("ID",e58);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_id_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // parametro_pagina ::= inicio_parametro_pagina corchete_id fin_parametro parametro_clase 
            {
              String RESULT =null;
		int e59left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e59right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String e59 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		crearParametro("PAGINA",e59);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_pagina",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // parametro_clase ::= inicio_parametro_clase parametro_clase_titulo 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_clase",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // parametro_clase ::= inicio_parametro_clase parametro_clase_parrafo 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_clase",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // parametro_clase ::= inicio_parametro_clase parametro_clase_imagen 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_clase",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // parametro_clase ::= inicio_parametro_clase parametro_clase_video 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_clase",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // parametro_clase ::= inicio_parametro_clase parametro_clase_menu 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_clase",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // parametro_clase_titulo ::= corchete_titulo fin_parametro fin_parametros atributos_titulo 
            {
              String RESULT =null;
		int e60left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e60right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e60 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		crearParametro("CLASE",e60);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_clase_titulo",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // atributos_titulo ::= inicio_atributos atributo_titulo fin_atributos 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributos_titulo",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // atributo_titulo ::= atributo_titulo inicio_atributo_texto corchetes_varias_palabras fin_atributo 
            {
              String RESULT =null;
		int e61left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e61right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e61 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("TEXTO",e61);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_titulo",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // atributo_titulo ::= atributo_titulo inicio_atributo_alineacion corchetes_alineacion fin_atributo 
            {
              String RESULT =null;
		int e62left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e62right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e62 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ALINEACION",e62);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_titulo",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // atributo_titulo ::= inicio_atributo_texto corchetes_varias_palabras fin_atributo 
            {
              String RESULT =null;
		int e63left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e63right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e63 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("TEXTO",e63);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_titulo",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // atributo_titulo ::= inicio_atributo_alineacion corchetes_alineacion fin_atributo 
            {
              String RESULT =null;
		int e64left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e64right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e64 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ALINEACION",e64);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_titulo",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // corchetes_alineacion ::= corchete_derecha 
            {
              String RESULT =null;
		int e65left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e65right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e65 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e65;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes_alineacion",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // corchetes_alineacion ::= corchete_izquierda 
            {
              String RESULT =null;
		int e66left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e66right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e66 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e66;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes_alineacion",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // corchetes_alineacion ::= corchete_centrar 
            {
              String RESULT =null;
		int e67left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e67right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e67 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e67;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes_alineacion",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // corchetes_alineacion ::= corchete_justificar 
            {
              String RESULT =null;
		int e68left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e68right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e68 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		RESULT = e68;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes_alineacion",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // parametro_clase_parrafo ::= corchete_parrafo fin_parametro fin_parametros atributos_parrafo 
            {
              String RESULT =null;
		int e68left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e68right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e68 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		crearParametro("CLASE",e68);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_clase_parrafo",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // atributos_parrafo ::= inicio_atributos atributo_parrafo fin_atributos 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributos_parrafo",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // atributo_parrafo ::= atributo_parrafo inicio_atributo_texto corchetes_varias_palabras fin_atributo 
            {
              String RESULT =null;
		int e69left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e69right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e69 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("TEXTO",e69);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_parrafo",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // atributo_parrafo ::= atributo_parrafo inicio_atributo_alineacion corchetes_alineacion fin_atributo 
            {
              String RESULT =null;
		int e70left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e70right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e70 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ALINEACION",e70);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_parrafo",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // atributo_parrafo ::= atributo_parrafo inicio_atributo_color corchete_hexadecimal fin_atributo 
            {
              String RESULT =null;
		int e71left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e71right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e71 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("COLOR",e71);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_parrafo",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // atributo_parrafo ::= inicio_atributo_texto corchetes_varias_palabras fin_atributo 
            {
              String RESULT =null;
		int e72left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e72right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e72 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("TEXTO",e72);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_parrafo",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // atributo_parrafo ::= inicio_atributo_alineacion corchetes_alineacion fin_atributo 
            {
              String RESULT =null;
		int e73left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e73right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e73 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ALINEACION",e73);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_parrafo",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // atributo_parrafo ::= inicio_atributo_color corchete_hexadecimal fin_atributo 
            {
              String RESULT =null;
		int e74left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e74right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e74 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("COLOR",e74);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_parrafo",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // parametro_clase_imagen ::= corchete_imagen fin_parametro fin_parametros atributos_imagen 
            {
              String RESULT =null;
		int e75left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e75right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e75 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		crearParametro("CLASE",e75);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_clase_imagen",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // atributos_imagen ::= inicio_atributos atributo_imagen fin_atributos 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributos_imagen",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // atributo_imagen ::= atributo_imagen inicio_atributo_origen corchete_origen fin_atributo 
            {
              String RESULT =null;
		int e76left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e76right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e76 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ORIGEN",e76);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_imagen",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // atributo_imagen ::= atributo_imagen inicio_atributo_alineacion corchetes_alineacion fin_atributo 
            {
              String RESULT =null;
		int e77left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e77right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e77 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ALINEACION",e77);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_imagen",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // atributo_imagen ::= atributo_imagen inicio_atributo_altura corchete_numeros fin_atributo 
            {
              String RESULT =null;
		int e78left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e78right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e78 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ALTURA",e78);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_imagen",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // atributo_imagen ::= atributo_imagen inicio_atributo_ancho corchete_numeros fin_atributo 
            {
              String RESULT =null;
		int e79left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e79right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e79 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ANCHO",e79);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_imagen",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // atributo_imagen ::= inicio_atributo_origen corchete_origen fin_atributo 
            {
              String RESULT =null;
		int e80left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e80right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e80 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ORIGEN",e80);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_imagen",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // atributo_imagen ::= inicio_atributo_alineacion corchetes_alineacion fin_atributo 
            {
              String RESULT =null;
		int e81left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e81right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e81 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ALINEACION",e81);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_imagen",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // atributo_imagen ::= inicio_atributo_altura corchete_numeros fin_atributo 
            {
              String RESULT =null;
		int e82left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e82right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e82 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ALTURA",e82);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_imagen",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // atributo_imagen ::= inicio_atributo_ancho corchete_numeros fin_atributo 
            {
              String RESULT =null;
		int e83left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e83right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e83 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ANCHO",e83);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_imagen",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // parametro_clase_video ::= corchete_video fin_parametro fin_parametros atributos_video 
            {
              String RESULT =null;
		int e84left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e84right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e84 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		crearParametro("CLASE",e84);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_clase_video",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // atributos_video ::= inicio_atributos atributo_video fin_atributos 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributos_video",37, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // atributo_video ::= atributo_video inicio_atributo_origen corchete_origen fin_atributo 
            {
              String RESULT =null;
		int e85left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e85right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e85 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ORIGEN",e85);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_video",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // atributo_video ::= atributo_video inicio_atributo_ancho corchete_numeros fin_atributo 
            {
              String RESULT =null;
		int e86left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e86right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e86 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ANCHO",e86);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_video",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // atributo_video ::= atributo_video inicio_atributo_altura corchete_numeros fin_atributo 
            {
              String RESULT =null;
		int e87left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e87right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e87 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ALTURA",e87);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_video",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // atributo_video ::= inicio_atributo_origen corchete_origen fin_atributo 
            {
              String RESULT =null;
		int e88left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e88right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e88 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ORIGEN",e88);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_video",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // atributo_video ::= inicio_atributo_ancho corchete_numeros fin_atributo 
            {
              String RESULT =null;
		int e89left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e89right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e89 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ANCHO",e89);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_video",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // atributo_video ::= inicio_atributo_altura corchete_numeros fin_atributo 
            {
              String RESULT =null;
		int e90left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e90right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e90 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("ALTURA",e90);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_video",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // parametro_clase_menu ::= corchete_menu fin_parametro fin_parametros atributos_menu 
            {
              String RESULT =null;
		int e91left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e91right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e91 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		crearParametro("CLASE",e91);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_clase_menu",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // atributos_menu ::= inicio_atributos atributo_menu fin_atributos 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributos_menu",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // atributo_menu ::= atributo_menu inicio_atributo_padre corchete_id fin_atributo 
            {
              String RESULT =null;
		int e92left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e92right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e92 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("PADRE",e92);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_menu",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // atributo_menu ::= atributo_menu inicio_atributo_etiquetas corchetes_etiquetas fin_atributo 
            {
              String RESULT =null;
		crearAtributo("ETIQUETAS","ETIQUETAS");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_menu",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // atributo_menu ::= inicio_atributo_padre corchete_id fin_atributo 
            {
              String RESULT =null;
		int e93left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e93right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e93 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearAtributo("PADRE",e93);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_menu",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // atributo_menu ::= inicio_atributo_etiquetas corchetes_etiquetas fin_atributo 
            {
              String RESULT =null;
		crearAtributo("ETIQUETAS","ETIQUETAS");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributo_menu",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // corchetes_etiquetas ::= corchete_etiquetas 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes_etiquetas",42, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // corchetes_etiquetas ::= corchete_id 
            {
              String RESULT =null;
		int e94left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e94right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e94 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		crearEtiqueta(e94);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchetes_etiquetas",42, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // estructura_borrar_componente ::= inicio_borrar_componente parametros_borrar_componente fin_accion 
            {
              String RESULT =null;
		

boolean tieneId=false,tienePagina=false;
boolean error=false;

String id=null, pagina=null;
for(int i=0;i<parametros.size();i++){
	if(parametros.get(i).getNombre().equals("ID")){
		if(tieneId==false){
			tieneId=true;
			id = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("PAGINA")){
		if(tienePagina==false){
			tienePagina=true;
			pagina = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}
}

if(tieneId==true && tienePagina==true){
	
	if(error==false){
	
		BorrarComponente componente = new BorrarComponente(id,pagina);
		acciones.accionBorrarComponente(componente);

	}else{
		System.out.println("HAY CAMPOS REPETIDOS");
	}
	
	
	
}else{
	System.out.println("FALTAN PARAMETROS OBLIGATORIOS");
	error=true;
}
	
	etiquetas= new ArrayList<>();
	parametros= new ArrayList<>();
	atributos= new ArrayList<>();




              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_borrar_componente",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // parametros_borrar_componente ::= inicio_parametros parametro_borrar_componente fin_parametros 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_borrar_componente",44, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // parametro_borrar_componente ::= parametro_borrar_componente inicio_parametro_id corchete_id fin_parametro 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("ID",e1);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_borrar_componente",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // parametro_borrar_componente ::= parametro_borrar_componente inicio_parametro_pagina corchete_id fin_parametro 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("PAGINA",e2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_borrar_componente",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // parametro_borrar_componente ::= inicio_parametro_id corchete_id fin_parametro 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("ID",e3);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_borrar_componente",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // parametro_borrar_componente ::= inicio_parametro_pagina corchete_id fin_parametro 
            {
              String RESULT =null;
		int e4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		crearParametro("PAGINA",e4);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_borrar_componente",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // estructura_modificar_componente ::= inicio_modificar_componente opcion_agregar_componente fin_accion 
            {
              String RESULT =null;
		

boolean tieneId=false,tienePagina=false,tieneClase=false;
boolean error=false;

String id=null,pagina=null,clase=null;

ComponenteMenu compMenu=null;
ComponenteParrafo compParrafo=null;
ComponenteImagen compImagen=null;
ComponenteVideo compVideo=null;
ComponenteTitulo compTitulo=null;

boolean tieneTexto=false,tieneAlineacion=false,tieneColor=false,tieneOrigen=false,tieneAltura=false,tieneAncho=false,tienePadre=false,tieneEtiquetas=false;

String texto=null, alineacion=null,color=null,origen=null,altura=null,ancho=null,padre=null;
for(int i=0;i<parametros.size();i++){
	if(parametros.get(i).getNombre().equals("ID")){
		if(tieneId==false){
			tieneId=true;
			id = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("PAGINA")){
		if(tienePagina==false){
			tienePagina=true;
			pagina = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}else if(parametros.get(i).getNombre().equals("CLASE")){
		if(tieneClase==false){
			tieneClase=true;
			clase = parametros.get(i).getLexema();
		}else{
			error=true;
		}
	}
}

if(tieneId==true && tienePagina==true && tieneClase==true){
	
	if(error==false){
		
	
	if(clase.equals("TITULO")){
		for(int i=0;i<atributos.size();i++){
			if(atributos.get(i).getNombre().equals("TEXTO")){
				if(tieneTexto==false){
					tieneTexto=true;
					texto = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("ALINEACION")){
				if(tieneAlineacion==false){
					tieneAlineacion=true;
					alineacion = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}
		}
		
		if(tieneTexto==true){
			if(error==false){
				compTitulo = new ComponenteTitulo(texto,alineacion);
			}else{
				System.out.println("HAY CAMPOS REPETIDOS");
			}
		}else{
			System.out.println("FALTAN ATRIBUTOS OBLIGATORIOS PARA TITULO");
		}
		
	
	}else if(clase.equals("PARRAFO")){
		for(int i=0;i<atributos.size();i++){
			if(atributos.get(i).getNombre().equals("TEXTO")){
				if(tieneTexto==false){
					tieneTexto=true;
					texto = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("ALINEACION")){
				if(tieneAlineacion==false){
					tieneAlineacion=true;
					alineacion = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("COLOR")){
				if(tieneColor==false){
					tieneColor=true;
					color = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}
		}
		
		if(tieneTexto==true){
			if(error==false){
				compParrafo = new ComponenteParrafo(texto,alineacion,color);
			}else{
				System.out.println("HAY CAMPOS REPETIDOS");
			}
		}else{
			System.out.println("FALTAN ATRIBUTOS OBLIGATORIOS PARA PARRAFO");
		}
	
	
	}else if(clase.equals("IMAGEN")){
		for(int i=0;i<atributos.size();i++){
			if(atributos.get(i).getNombre().equals("ORIGEN")){
				if(tieneOrigen==false){
					tieneOrigen=true;
					origen = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("ALINEACION")){
				if(tieneAlineacion==false){
					tieneAlineacion=true;
					alineacion = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("ALTURA")){
				if(tieneAltura==false){
					tieneAltura=true;
					altura = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("ANCHO")){
				if(tieneAncho==false){
					tieneAncho=true;
					ancho = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}
		}
		
		if(tieneOrigen==true && tieneAncho==true && tieneAltura==true){
			if(error==false){
				compImagen = new ComponenteImagen(origen,alineacion,Integer.parseInt(altura),Integer.parseInt(ancho));
			}else{
				System.out.println("HAY CAMPOS REPETIDOS");
			}
		}else{
			System.out.println("FALTAN ATRIBUTOS OBLIGATORIOS PARA IMAGEN");
		}
	
	
	}else if(clase.equals("VIDEO")){
		for(int i=0;i<atributos.size();i++){
			if(atributos.get(i).getNombre().equals("ORIGEN")){
				if(tieneOrigen==false){
					tieneOrigen=true;
					origen = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("ALTURA")){
				if(tieneAltura==false){
					tieneAltura=true;
					altura = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("ANCHO")){
				if(tieneAncho==false){
					tieneAncho=true;
					ancho = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}
		}
		
		if(tieneOrigen==true && tieneAncho==true && tieneAltura==true){
			if(error==false){
				compVideo = new ComponenteVideo(origen,Integer.parseInt(altura),Integer.parseInt(ancho));
			}else{
				System.out.println("HAY CAMPOS REPETIDOS");
			}
		}else{
			System.out.println("FALTAN ATRIBUTOS OBLIGATORIOS PARA VIDEO");
		}

	}else if(clase.equals("MENU")){
		for(int i=0;i<atributos.size();i++){
			if(atributos.get(i).getNombre().equals("PADRE")){
				if(tienePadre==false){
					tienePadre=true;
					padre = atributos.get(i).getLexema();
				}else{
					error=true;
				}
			}else if(atributos.get(i).getNombre().equals("ETIQUETAS")){
				if(tieneEtiquetas==false){
					tieneEtiquetas=true;
				}else{
					error=true;
				}
			}
		}
		
		if(tienePadre==true || tieneEtiquetas==true){
			if(error==false){
				compMenu = new ComponenteMenu(padre,etiquetas);
			}else{
				System.out.println("HAY CAMPOS REPETIDOS");
			}
		}else{
			System.out.println("FALTAN ATRIBUTOS OBLIGATORIOS PARA MENU");
		}
	}

		
	}else{
		System.out.println("HAY CAMPOS REPETIDOS");
	}
	
	if (error == false) {
                            if (compTitulo == null && compParrafo == null && compImagen == null && compVideo == null && compMenu == null) {
                                System.out.println("NO HAY NINGUN COMPONENTE QUE UTILIZAR");
                            } else {

                                ModificarComponente componente = new ModificarComponente(id, pagina, clase, compTitulo, compParrafo, compImagen, compVideo, compMenu);
                                acciones.accionModificarComponente(componente,usuarioModificacionGlobal);
                            }

                        } else {
                            System.out.println("HAY ERRORES PARA MODIFICAR COMPONENTE");
                        }
	
	
}else{
	System.out.println("FALTAN PARAMETROS OBLIGATORIOS");
	error=true;
}
	
	etiquetas= new ArrayList<>();
	parametros= new ArrayList<>();
	atributos= new ArrayList<>();




              CUP$parser$result = parser.getSymbolFactory().newSymbol("estructura_modificar_componente",46, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // inicio_parametro_usuario_creacion ::= ANGULAR_ABIERTO PARAMETRO NOMBRE IGUAL COMILLA USUARIO_CREACION COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_parametro_usuario_creacion",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // inicio_parametro_fecha_creacion ::= ANGULAR_ABIERTO PARAMETRO NOMBRE IGUAL COMILLA FECHA_CREACION COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_parametro_fecha_creacion",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // inicio_parametro_fecha_modificacion ::= ANGULAR_ABIERTO PARAMETRO NOMBRE IGUAL COMILLA FECHA_MODIFICACION COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_parametro_fecha_modificacion",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // inicio_parametro_usuario_modificacion ::= ANGULAR_ABIERTO PARAMETRO NOMBRE IGUAL COMILLA USUARIO_MODIFICACION COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_parametro_usuario_modificacion",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // inicio_parametro_id ::= ANGULAR_ABIERTO PARAMETRO NOMBRE IGUAL COMILLA ID COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_parametro_id",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // inicio_parametro_titulo ::= ANGULAR_ABIERTO PARAMETRO NOMBRE IGUAL COMILLA TITULO COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_parametro_titulo",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // inicio_parametro_padre ::= ANGULAR_ABIERTO PARAMETRO NOMBRE IGUAL COMILLA PADRE COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_parametro_padre",53, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // inicio_parametro_sitio ::= ANGULAR_ABIERTO PARAMETRO NOMBRE IGUAL COMILLA SITIO COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_parametro_sitio",54, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // inicio_parametro_pagina ::= ANGULAR_ABIERTO PARAMETRO NOMBRE IGUAL COMILLA PAGINA COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_parametro_pagina",55, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // inicio_parametro_clase ::= ANGULAR_ABIERTO PARAMETRO NOMBRE IGUAL COMILLA CLASE COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_parametro_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // inicio_parametros ::= ANGULAR_ABIERTO PARAMETROS ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_parametros",57, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // fin_parametros ::= ANGULAR_ABIERTO DIAGONAL PARAMETROS ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_parametros",58, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // fin_parametro ::= ANGULAR_ABIERTO DIAGONAL PARAMETRO ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_parametro",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // corchete_id ::= CORCHETE_ABIERTO IDD CORCHETE_CERRADO 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT=e2;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchete_id",60, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // corchete_titulo ::= CORCHETE_ABIERTO TITULO CORCHETE_CERRADO 
            {
              String RESULT =null;
		RESULT="TITULO";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchete_titulo",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // corchete_parrafo ::= CORCHETE_ABIERTO PARRAFO CORCHETE_CERRADO 
            {
              String RESULT =null;
		RESULT="PARRAFO";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchete_parrafo",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // corchete_imagen ::= CORCHETE_ABIERTO IMAGEN CORCHETE_CERRADO 
            {
              String RESULT =null;
		RESULT="IMAGEN";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchete_imagen",64, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // corchete_video ::= CORCHETE_ABIERTO VIDEO CORCHETE_CERRADO 
            {
              String RESULT =null;
		RESULT="VIDEO";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchete_video",65, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // corchete_menu ::= CORCHETE_ABIERTO MENU CORCHETE_CERRADO 
            {
              String RESULT =null;
		RESULT="MENU";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchete_menu",66, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // corchete_derecha ::= CORCHETE_ABIERTO DERECHA CORCHETE_CERRADO 
            {
              String RESULT =null;
		RESULT="DERECHA";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchete_derecha",67, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // corchete_izquierda ::= CORCHETE_ABIERTO IZQUIERDA CORCHETE_CERRADO 
            {
              String RESULT =null;
		RESULT="IZQUIERDA";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchete_izquierda",69, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // corchete_centrar ::= CORCHETE_ABIERTO CENTRAR CORCHETE_CERRADO 
            {
              String RESULT =null;
		RESULT="CENTRAR";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchete_centrar",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // corchete_justificar ::= CORCHETE_ABIERTO JUSTIFICAR CORCHETE_CERRADO 
            {
              String RESULT =null;
		RESULT="JUSTIFICAR";
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchete_justificar",71, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // corchete_hexadecimal ::= CORCHETE_ABIERTO HEXADECIMAL CORCHETE_CERRADO 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT=e3;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchete_hexadecimal",72, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // corchete_numeros ::= CORCHETE_ABIERTO NUMEROS CORCHETE_CERRADO 
            {
              String RESULT =null;
		int e4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT=e4;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchete_numeros",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // corchete_etiquetas ::= CORCHETE_ABIERTO concatenacion_corchetes CORCHETE_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchete_etiquetas",63, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // concatenacion_corchetes ::= concatenacion_corchetes PIPE IDD 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		crearEtiqueta(e1);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("concatenacion_corchetes",100, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // concatenacion_corchetes ::= corchete_id 
            {
              String RESULT =null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		crearEtiqueta(e2);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("concatenacion_corchetes",100, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // concatenacion_corchetes ::= IDD PIPE IDD 
            {
              String RESULT =null;
		int e3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e4left = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int e4right = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		String e4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		crearEtiqueta(e3); crearEtiqueta(e4);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("concatenacion_corchetes",100, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // corchete_fecha ::= CORCHETE_ABIERTO FECHA CORCHETE_CERRADO 
            {
              String RESULT =null;
		int e27left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e27right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e27 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT=e27;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchete_fecha",104, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // corchete_origen ::= CORCHETE_ABIERTO URL CORCHETE_CERRADO 
            {
              String RESULT =null;
		int e28left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e28right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e28 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT=e28;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("corchete_origen",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // inicio_etiqueta_id ::= ANGULAR_ABIERTO ETIQUETA VALOR IGUAL COMILLA IDD COMILLA DIAGONAL ANGULAR_CERRADO 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		RESULT= e1;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_etiqueta_id",74, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // inicio_etiquetas ::= ANGULAR_ABIERTO ETIQUETAS ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_etiquetas",75, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // fin_etiquetas ::= ANGULAR_ABIERTO DIAGONAL ETIQUETAS ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_etiquetas",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // inicio_atributo_texto ::= ANGULAR_ABIERTO ATRIBUTO NOMBRE IGUAL COMILLA TEXTO COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_atributo_texto",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // inicio_atributo_alineacion ::= ANGULAR_ABIERTO ATRIBUTO NOMBRE IGUAL COMILLA ALINEACION COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_atributo_alineacion",78, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // inicio_atributo_color ::= ANGULAR_ABIERTO ATRIBUTO NOMBRE IGUAL COMILLA COLOR COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_atributo_color",79, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // inicio_atributo_origen ::= ANGULAR_ABIERTO ATRIBUTO NOMBRE IGUAL COMILLA ORIGEN COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_atributo_origen",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // inicio_atributo_altura ::= ANGULAR_ABIERTO ATRIBUTO NOMBRE IGUAL COMILLA ALTURA COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_atributo_altura",81, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // inicio_atributo_ancho ::= ANGULAR_ABIERTO ATRIBUTO NOMBRE IGUAL COMILLA ANCHO COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_atributo_ancho",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // inicio_atributo_padre ::= ANGULAR_ABIERTO ATRIBUTO NOMBRE IGUAL COMILLA PADRE COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_atributo_padre",83, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // inicio_atributo_etiquetas ::= ANGULAR_ABIERTO ATRIBUTO NOMBRE IGUAL COMILLA ETIQUETAS COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_atributo_etiquetas",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // fin_atributo ::= ANGULAR_ABIERTO DIAGONAL ATRIBUTO ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_atributo",85, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // inicio_atributos ::= ANGULAR_ABIERTO ATRIBUTOS ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_atributos",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // fin_atributos ::= ANGULAR_ABIERTO DIAGONAL ATRIBUTOS ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_atributos",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // inicio_nuevo_sitio_web ::= ANGULAR_ABIERTO ACCION NOMBRE IGUAL COMILLA NUEVO_SITIO_WEB COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_nuevo_sitio_web",88, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // inicio_borrar_sitio_web ::= ANGULAR_ABIERTO ACCION NOMBRE IGUAL COMILLA BORRAR_SITIO_WEB COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_borrar_sitio_web",89, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // inicio_nueva_pagina ::= ANGULAR_ABIERTO ACCION NOMBRE IGUAL COMILLA NUEVA_PAGINA COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_nueva_pagina",90, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // inicio_borrar_pagina ::= ANGULAR_ABIERTO ACCION NOMBRE IGUAL COMILLA BORRAR_PAGINA COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_borrar_pagina",91, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // inicio_modificar_pagina ::= ANGULAR_ABIERTO ACCION NOMBRE IGUAL COMILLA MODIFICAR_PAGINA COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_modificar_pagina",92, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // inicio_agregar_componente ::= ANGULAR_ABIERTO ACCION NOMBRE IGUAL COMILLA AGREGAR_COMPONENTE COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_agregar_componente",93, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // inicio_borrar_componente ::= ANGULAR_ABIERTO ACCION NOMBRE IGUAL COMILLA BORRAR_COMPONENTE COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_borrar_componente",94, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // inicio_modificar_componente ::= ANGULAR_ABIERTO ACCION NOMBRE IGUAL COMILLA MODIFICAR_COMPONENTE COMILLA ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_modificar_componente",95, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // fin_accion ::= ANGULAR_ABIERTO DIAGONAL ACCION ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_accion",96, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // inicio_acciones ::= ANGULAR_ABIERTO ACCIONES ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_acciones",97, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // fin_acciones ::= ANGULAR_ABIERTO DIAGONAL ACCIONES ANGULAR_CERRADO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("fin_acciones",98, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
